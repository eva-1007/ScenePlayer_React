{"ast":null,"code":"var _jsxFileName = \"/Users/eva/Documents/pantheonlabQ1/my-app/src/ScenePlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScenePlayer = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [currentScene, setCurrentScene] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const handlePlayClick = () => {\n    var _videoRef$current;\n    (_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.play();\n    setIsPlaying(true);\n  };\n  const handlePauseClick = () => {\n    var _videoRef$current2;\n    (_videoRef$current2 = videoRef.current) === null || _videoRef$current2 === void 0 ? void 0 : _videoRef$current2.pause();\n    setIsPlaying(false);\n  };\n  const scenes = [{\n    index: 0,\n    sentence: \"This is a simple Javascript test\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    textAnimation: \"none\",\n    media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\",\n    // Image URL\n    duration: 5 // Scene 0 duration\n  }, {\n    index: 1,\n    sentence: \"Here comes the video!\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    textAnimation: \"blink\",\n    media: \"/VID.mp4\",\n    // Ensure your video is in the public folder\n    duration: 3 // Scene 1 duration\n  }];\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    const interval = setInterval(() => {\n      setTimeElapsed(prevTime => prevTime + 0.1);\n      if (timeElapsed >= scenes[currentScene].duration) {\n        setCurrentScene(prevScene => prevScene === 0 ? 1 : 0); // Toggle between scenes\n        setTimeElapsed(0);\n        if (videoRef.current) {\n          videoRef.current.pause();\n          videoRef.current.currentTime = 0; // Reset video time\n          setIsPlaying(false);\n        }\n        drawScene(ctx); // 只在场景切换时调用 drawScene，而非每隔 100 毫秒调用一次\n        //if (videoRef.current) {\n        //    videoRef.current.play();\n        //    setIsPlaying(true);\n        //  }\n      }\n    }, 100);\n    return () => clearInterval(interval);\n  }, [timeElapsed, currentScene, isPlaying, scenes]);\n  const drawScene = ctx => {\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    const scene = scenes[currentScene];\n\n    // Handle image for scene 0\n    if (scene.index === 0) {\n      const img = new Image();\n      img.src = scene.media;\n      if (img.complete) {\n        ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n      } else {\n        img.onload = () => {\n          ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n          drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n        };\n      }\n    } else if (scene.index === 1) {\n      // Handle video for scene 1\n      ctx.fillStyle = 'lightgray';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // 确保视频准备好了再绘制\n      if (videoRef.current && videoRef.current.readyState >= 2) {\n        //ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n      } else {\n        videoRef.current.oncanplay = () => {\n          ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        };\n      }\n\n      // 绘制文本\n      drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n    }\n  };\n  const drawText = (ctx, text, x, y) => {\n    if (currentScene === 0) {\n      ctx.fillStyle = 'black';\n      ctx.font = '30px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(text, x, y);\n    }\n  };\n  const handleCanvasClick = () => {\n    //if (currentScene === 1) {\n    if (isPlaying) {\n      videoRef.current.pause();\n      setIsPlaying(false);\n      //videoRef.current.pause();\n    } else {\n      videoRef.current.play();\n      setIsPlaying(true);\n      //videoRef.current.play().catch(error => console.error('Error playing video:', error));\n    }\n    //}\n  };\n  const handleCanvasDoubleClick = () => {\n    if (currentScene === 1) {\n      setIsPlaying(false);\n      videoRef.current.currentTime = 0;\n      videoRef.current.pause();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      src: scenes[currentScene].media,\n      style: {\n        display: 'none'\n      } // Hide video element, we draw it on canvas\n      ,\n      autoPlay: true,\n      onCanPlay: () => {\n        console.log('Video is ready to play');\n      },\n      onEnded: () => {\n        videoRef.current.pause();\n        setIsPlaying(false);\n        setCurrentScene(0); // Switch back to scene 0 after video ends\n      },\n      muted: true,\n      controls: true // Optional\n      ,\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1280,\n      height: 720,\n      onClick: handleCanvasClick,\n      onDoubleClick: handleCanvasDoubleClick,\n      style: {\n        cursor: 'pointer',\n        backgroundColor: '#f0f0f0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"play-button\",\n      onClick: handlePlayClick,\n      children: \"\\u64AD\\u653E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"play-button\",\n      onClick: handlePauseClick,\n      children: \"\\u6682\\u505C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), currentScene === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'absolute',\n          top: scenes[1].textPosition.y,\n          left: scenes[1].textPosition.x,\n          fontSize: '30px',\n          fontFamily: 'Arial',\n          textAlign: 'center',\n          animation: 'blink 1s infinite'\n        },\n        children: scenes[1].sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n_s(ScenePlayer, \"rdsU9qAulK4S/KkjC2CCl0HnLQA=\");\n_c = ScenePlayer;\nexport default ScenePlayer;\nvar _c;\n$RefreshReg$(_c, \"ScenePlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ScenePlayer","_s","canvasRef","videoRef","currentScene","setCurrentScene","timeElapsed","setTimeElapsed","isPlaying","setIsPlaying","handlePlayClick","_videoRef$current","current","play","handlePauseClick","_videoRef$current2","pause","scenes","index","sentence","textPosition","x","y","textAnimation","media","duration","ctx","getContext","interval","setInterval","prevTime","prevScene","currentTime","drawScene","clearInterval","clearRect","width","height","scene","img","Image","src","complete","drawImage","drawText","onload","fillStyle","fillRect","readyState","oncanplay","text","font","textAlign","fillText","handleCanvasClick","handleCanvasDoubleClick","children","style","display","autoPlay","onCanPlay","console","log","onEnded","muted","controls","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDoubleClick","cursor","backgroundColor","className","position","top","left","fontSize","fontFamily","animation","_c","$RefreshReg$"],"sources":["/Users/eva/Documents/pantheonlabQ1/my-app/src/ScenePlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst ScenePlayer = () => {\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const [currentScene, setCurrentScene] = useState(0);\n    const [timeElapsed, setTimeElapsed] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    const handlePlayClick = () => {\n        videoRef.current?.play();\n        setIsPlaying(true);\n      };\n    \n      const handlePauseClick = () => {\n        videoRef.current?.pause();\n        setIsPlaying(false);\n      };\n\n    const scenes = [\n        {\n            index: 0,\n            sentence: \"This is a simple Javascript test\",\n            textPosition: { x: 640, y: 360 }, // Center\n            textAnimation: \"none\",\n            media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\", // Image URL\n            duration: 5, // Scene 0 duration\n        },\n        {\n            index: 1,\n            sentence: \"Here comes the video!\",\n            textPosition: { x: 640, y: 360 }, // Center\n            textAnimation: \"blink\",\n            media: \"/VID.mp4\", // Ensure your video is in the public folder\n            duration: 3, // Scene 1 duration\n        },\n    ];\n\n    useEffect(() => {\n        const ctx = canvasRef.current.getContext('2d');\n        const interval = setInterval(() => {\n            setTimeElapsed(prevTime => prevTime + 0.1);\n            if (timeElapsed >= scenes[currentScene].duration) {\n                setCurrentScene(prevScene => (prevScene === 0 ? 1 : 0)); // Toggle between scenes\n                setTimeElapsed(0);\n                if (videoRef.current) {\n                    videoRef.current.pause();\n                    videoRef.current.currentTime = 0; // Reset video time\n                    setIsPlaying(false);\n                }\n                drawScene(ctx); // 只在场景切换时调用 drawScene，而非每隔 100 毫秒调用一次\n                //if (videoRef.current) {\n                //    videoRef.current.play();\n                //    setIsPlaying(true);\n                //  }\n            }\n            \n        }, 100);\n        return () => clearInterval(interval);\n    }, [timeElapsed, currentScene,isPlaying,scenes]);\n\n    const drawScene = (ctx) => {\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        const scene = scenes[currentScene];\n    \n        // Handle image for scene 0\n        if (scene.index === 0) {\n            const img = new Image();\n            img.src = scene.media;\n            if (img.complete) {\n                ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n                drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n            } else {\n                img.onload = () => {\n                    ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n                    drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n                };\n            }\n        } else if (scene.index === 1) { // Handle video for scene 1\n            ctx.fillStyle = 'lightgray';\n            ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    \n            // 确保视频准备好了再绘制\n            if (videoRef.current && videoRef.current.readyState >= 2) {\n                //ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n                ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n            } else {\n                videoRef.current.oncanplay = () => {\n                    ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n                };\n            }\n    \n            // 绘制文本\n            drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n        }\n    };\n\n    const drawText = (ctx, text, x, y) => {\n        if (currentScene === 0) {\n            ctx.fillStyle = 'black';\n            ctx.font = '30px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText(text, x, y);\n        }\n    };\n\n    const handleCanvasClick = () => {\n        //if (currentScene === 1) {\n            if (isPlaying) {\n                videoRef.current.pause();\n                setIsPlaying(false);\n                //videoRef.current.pause();\n            } else {\n                videoRef.current.play();\n                setIsPlaying(true);\n                //videoRef.current.play().catch(error => console.error('Error playing video:', error));\n                \n            }\n        //}\n    };\n\n    const handleCanvasDoubleClick = () => {\n        if (currentScene === 1) {\n            setIsPlaying(false);\n            videoRef.current.currentTime = 0;\n            videoRef.current.pause();\n        }\n    };\n\n    return (\n        <div>\n            <video\n                src={scenes[currentScene].media}\n                style={{ display: 'none' }} // Hide video element, we draw it on canvas\n                autoPlay\n                onCanPlay={() => {\n                    console.log('Video is ready to play');\n                }}\n                onEnded={() => {\n                    videoRef.current.pause();\n                    setIsPlaying(false);\n                    setCurrentScene(0); // Switch back to scene 0 after video ends\n                }}\n                muted\n                controls // Optional\n                ref={videoRef}\n            />\n            <canvas\n                ref={canvasRef}\n                width={1280}\n                height={720}\n                onClick={handleCanvasClick}\n                onDoubleClick={handleCanvasDoubleClick}\n                style={{ cursor: 'pointer', backgroundColor: '#f0f0f0' }}\n            />\n            <button className=\"play-button\" onClick={handlePlayClick}>播放</button>\n            <button className=\"play-button\" onClick={handlePauseClick}>暂停</button>\n            {currentScene === 1  && (\n                <div>\n                    <span\n                        style={{\n                            position: 'absolute',\n                            top: scenes[1].textPosition.y,\n                            left: scenes[1].textPosition.x,\n                            fontSize: '30px',\n                            fontFamily: 'Arial',\n                            textAlign: 'center',\n                            animation: 'blink 1s infinite',\n                        }}\n                    >\n                        {scenes[1].sentence}\n                    </span>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ScenePlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMO,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,eAAe,GAAGA,CAAA,KAAM;IAAA,IAAAC,iBAAA;IAC1B,CAAAA,iBAAA,GAAAR,QAAQ,CAACS,OAAO,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBE,IAAI,CAAC,CAAC;IACxBJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAAA,IAAAC,kBAAA;IAC7B,CAAAA,kBAAA,GAAAZ,QAAQ,CAACS,OAAO,cAAAG,kBAAA,uBAAhBA,kBAAA,CAAkBC,KAAK,CAAC,CAAC;IACzBP,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEH,MAAMQ,MAAM,GAAG,CACX;IACIC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,kCAAkC;IAC5CC,YAAY,EAAE;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAI,CAAC;IAAE;IAClCC,aAAa,EAAE,MAAM;IACrBC,KAAK,EAAE,gEAAgE;IAAE;IACzEC,QAAQ,EAAE,CAAC,CAAE;EACjB,CAAC,EACD;IACIP,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,uBAAuB;IACjCC,YAAY,EAAE;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAI,CAAC;IAAE;IAClCC,aAAa,EAAE,OAAO;IACtBC,KAAK,EAAE,UAAU;IAAE;IACnBC,QAAQ,EAAE,CAAC,CAAE;EACjB,CAAC,CACJ;EAED9B,SAAS,CAAC,MAAM;IACZ,MAAM+B,GAAG,GAAGxB,SAAS,CAACU,OAAO,CAACe,UAAU,CAAC,IAAI,CAAC;IAC9C,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BtB,cAAc,CAACuB,QAAQ,IAAIA,QAAQ,GAAG,GAAG,CAAC;MAC1C,IAAIxB,WAAW,IAAIW,MAAM,CAACb,YAAY,CAAC,CAACqB,QAAQ,EAAE;QAC9CpB,eAAe,CAAC0B,SAAS,IAAKA,SAAS,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC;QACzDxB,cAAc,CAAC,CAAC,CAAC;QACjB,IAAIJ,QAAQ,CAACS,OAAO,EAAE;UAClBT,QAAQ,CAACS,OAAO,CAACI,KAAK,CAAC,CAAC;UACxBb,QAAQ,CAACS,OAAO,CAACoB,WAAW,GAAG,CAAC,CAAC,CAAC;UAClCvB,YAAY,CAAC,KAAK,CAAC;QACvB;QACAwB,SAAS,CAACP,GAAG,CAAC,CAAC,CAAC;QAChB;QACA;QACA;QACA;MACJ;IAEJ,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMQ,aAAa,CAACN,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACtB,WAAW,EAAEF,YAAY,EAACI,SAAS,EAACS,MAAM,CAAC,CAAC;EAEhD,MAAMgB,SAAS,GAAIP,GAAG,IAAK;IACvBA,GAAG,CAACS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEjC,SAAS,CAACU,OAAO,CAACwB,KAAK,EAAElC,SAAS,CAACU,OAAO,CAACyB,MAAM,CAAC;IACtE,MAAMC,KAAK,GAAGrB,MAAM,CAACb,YAAY,CAAC;;IAElC;IACA,IAAIkC,KAAK,CAACpB,KAAK,KAAK,CAAC,EAAE;MACnB,MAAMqB,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,GAAG,GAAGH,KAAK,CAACd,KAAK;MACrB,IAAIe,GAAG,CAACG,QAAQ,EAAE;QACdhB,GAAG,CAACiB,SAAS,CAACJ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAErC,SAAS,CAACU,OAAO,CAACwB,KAAK,EAAElC,SAAS,CAACU,OAAO,CAACyB,MAAM,CAAC;QAC3EO,QAAQ,CAAClB,GAAG,EAAEY,KAAK,CAACnB,QAAQ,EAAEmB,KAAK,CAAClB,YAAY,CAACC,CAAC,EAAEiB,KAAK,CAAClB,YAAY,CAACE,CAAC,CAAC;MAC7E,CAAC,MAAM;QACHiB,GAAG,CAACM,MAAM,GAAG,MAAM;UACfnB,GAAG,CAACiB,SAAS,CAACJ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAErC,SAAS,CAACU,OAAO,CAACwB,KAAK,EAAElC,SAAS,CAACU,OAAO,CAACyB,MAAM,CAAC;UAC3EO,QAAQ,CAAClB,GAAG,EAAEY,KAAK,CAACnB,QAAQ,EAAEmB,KAAK,CAAClB,YAAY,CAACC,CAAC,EAAEiB,KAAK,CAAClB,YAAY,CAACE,CAAC,CAAC;QAC7E,CAAC;MACL;IACJ,CAAC,MAAM,IAAIgB,KAAK,CAACpB,KAAK,KAAK,CAAC,EAAE;MAAE;MAC5BQ,GAAG,CAACoB,SAAS,GAAG,WAAW;MAC3BpB,GAAG,CAACqB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE7C,SAAS,CAACU,OAAO,CAACwB,KAAK,EAAElC,SAAS,CAACU,OAAO,CAACyB,MAAM,CAAC;;MAErE;MACA,IAAIlC,QAAQ,CAACS,OAAO,IAAIT,QAAQ,CAACS,OAAO,CAACoC,UAAU,IAAI,CAAC,EAAE;QACtD;QACAtB,GAAG,CAACiB,SAAS,CAACxC,QAAQ,CAACS,OAAO,EAAE,CAAC,EAAE,CAAC,EAAEV,SAAS,CAACU,OAAO,CAACwB,KAAK,EAAElC,SAAS,CAACU,OAAO,CAACyB,MAAM,CAAC;MAC5F,CAAC,MAAM;QACHlC,QAAQ,CAACS,OAAO,CAACqC,SAAS,GAAG,MAAM;UAC/BvB,GAAG,CAACiB,SAAS,CAACxC,QAAQ,CAACS,OAAO,EAAE,CAAC,EAAE,CAAC,EAAEV,SAAS,CAACU,OAAO,CAACwB,KAAK,EAAElC,SAAS,CAACU,OAAO,CAACyB,MAAM,CAAC;QAC5F,CAAC;MACL;;MAEA;MACAO,QAAQ,CAAClB,GAAG,EAAEY,KAAK,CAACnB,QAAQ,EAAEmB,KAAK,CAAClB,YAAY,CAACC,CAAC,EAAEiB,KAAK,CAAClB,YAAY,CAACE,CAAC,CAAC;IAC7E;EACJ,CAAC;EAED,MAAMsB,QAAQ,GAAGA,CAAClB,GAAG,EAAEwB,IAAI,EAAE7B,CAAC,EAAEC,CAAC,KAAK;IAClC,IAAIlB,YAAY,KAAK,CAAC,EAAE;MACpBsB,GAAG,CAACoB,SAAS,GAAG,OAAO;MACvBpB,GAAG,CAACyB,IAAI,GAAG,YAAY;MACvBzB,GAAG,CAAC0B,SAAS,GAAG,QAAQ;MACxB1B,GAAG,CAAC2B,QAAQ,CAACH,IAAI,EAAE7B,CAAC,EAAEC,CAAC,CAAC;IAC5B;EACJ,CAAC;EAED,MAAMgC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;IACI,IAAI9C,SAAS,EAAE;MACXL,QAAQ,CAACS,OAAO,CAACI,KAAK,CAAC,CAAC;MACxBP,YAAY,CAAC,KAAK,CAAC;MACnB;IACJ,CAAC,MAAM;MACHN,QAAQ,CAACS,OAAO,CAACC,IAAI,CAAC,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;MAClB;IAEJ;IACJ;EACJ,CAAC;EAED,MAAM8C,uBAAuB,GAAGA,CAAA,KAAM;IAClC,IAAInD,YAAY,KAAK,CAAC,EAAE;MACpBK,YAAY,CAAC,KAAK,CAAC;MACnBN,QAAQ,CAACS,OAAO,CAACoB,WAAW,GAAG,CAAC;MAChC7B,QAAQ,CAACS,OAAO,CAACI,KAAK,CAAC,CAAC;IAC5B;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAAyD,QAAA,gBACIzD,OAAA;MACI0C,GAAG,EAAExB,MAAM,CAACb,YAAY,CAAC,CAACoB,KAAM;MAChCiC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE,CAAC;MAAA;MAC5BC,QAAQ;MACRC,SAAS,EAAEA,CAAA,KAAM;QACbC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACzC,CAAE;MACFC,OAAO,EAAEA,CAAA,KAAM;QACX5D,QAAQ,CAACS,OAAO,CAACI,KAAK,CAAC,CAAC;QACxBP,YAAY,CAAC,KAAK,CAAC;QACnBJ,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;MACxB,CAAE;MACF2D,KAAK;MACLC,QAAQ,OAAC;MAAA;MACTC,GAAG,EAAE/D;IAAS;MAAAgE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACFvE,OAAA;MACImE,GAAG,EAAEhE,SAAU;MACfkC,KAAK,EAAE,IAAK;MACZC,MAAM,EAAE,GAAI;MACZkC,OAAO,EAAEjB,iBAAkB;MAC3BkB,aAAa,EAAEjB,uBAAwB;MACvCE,KAAK,EAAE;QAAEgB,MAAM,EAAE,SAAS;QAAEC,eAAe,EAAE;MAAU;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACFvE,OAAA;MAAQ4E,SAAS,EAAC,aAAa;MAACJ,OAAO,EAAE7D,eAAgB;MAAA8C,QAAA,EAAC;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrEvE,OAAA;MAAQ4E,SAAS,EAAC,aAAa;MAACJ,OAAO,EAAEzD,gBAAiB;MAAA0C,QAAA,EAAC;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrElE,YAAY,KAAK,CAAC,iBACfL,OAAA;MAAAyD,QAAA,eACIzD,OAAA;QACI0D,KAAK,EAAE;UACHmB,QAAQ,EAAE,UAAU;UACpBC,GAAG,EAAE5D,MAAM,CAAC,CAAC,CAAC,CAACG,YAAY,CAACE,CAAC;UAC7BwD,IAAI,EAAE7D,MAAM,CAAC,CAAC,CAAC,CAACG,YAAY,CAACC,CAAC;UAC9B0D,QAAQ,EAAE,MAAM;UAChBC,UAAU,EAAE,OAAO;UACnB5B,SAAS,EAAE,QAAQ;UACnB6B,SAAS,EAAE;QACf,CAAE;QAAAzB,QAAA,EAEDvC,MAAM,CAAC,CAAC,CAAC,CAACE;MAAQ;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACrE,EAAA,CA9KID,WAAW;AAAAkF,EAAA,GAAXlF,WAAW;AAgLjB,eAAeA,WAAW;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}