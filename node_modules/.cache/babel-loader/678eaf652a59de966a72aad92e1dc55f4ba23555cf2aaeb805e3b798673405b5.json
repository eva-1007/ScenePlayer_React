{"ast":null,"code":"var _jsxFileName = \"/Users/eva/Documents/pantheonlabQ1/my-app/src/ScenePlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScenePlayer = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [currentScene, setCurrentScene] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const handlePlay = () => {\n    if (videoRef.current.src !== scenes[currentScene].media) {\n      videoRef.current.src = scenes[currentScene].media;\n    }\n    if (videoRef.current.readyState >= 3) {\n      videoRef.current.play();\n    } else {\n      console.log('Video not ready yet');\n    }\n  };\n  const handlePause = () => {\n    console.log('Pause button clicked');\n    console.log('Current time:', videoRef.current.currentTime);\n    if (videoRef.current.src !== scenes[currentScene].media) {\n      videoRef.current.src = scenes[currentScene].media;\n    }\n    if (videoRef.current.paused === false) {\n      setIsPlaying(false);\n      videoRef.current.pause();\n    }\n  };\n  const handleStop = () => {\n    if (videoRef.current.src !== scenes[currentScene].media) {\n      videoRef.current.src = scenes[currentScene].media;\n    }\n    setIsPlaying(false);\n    videoRef.current.currentTime = 0;\n    videoRef.current.pause();\n  };\n  const scenes = [{\n    index: 0,\n    sentence: \"This is a simple Javascript test\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    textAnimation: \"none\",\n    media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\",\n    // Image URL\n    duration: 5 // Scene 0 duration\n  }, {\n    index: 1,\n    sentence: \"Here comes the video!\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    textAnimation: \"blink\",\n    media: \"/VID.mp4\",\n    // Ensure your video is in the public folder\n    duration: 3 // Scene 1 duration\n  }];\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    const interval = setInterval(() => {\n      setTimeElapsed(prevTime => prevTime + 0.1);\n      if (timeElapsed >= scenes[currentScene].duration) {\n        setCurrentScene(prevScene => prevScene === 0 ? 1 : 0); // Toggle between scenes\n        setTimeElapsed(0);\n        if (videoRef.current) {\n          videoRef.current.pause();\n          videoRef.current.currentTime = 0; // Reset video time\n          setIsPlaying(false);\n        }\n      }\n      drawScene(ctx);\n    }, 100);\n    return () => clearInterval(interval);\n  }, [timeElapsed, currentScene]);\n  useEffect(() => {\n    const playButton = document.getElementById('playButton');\n    const pauseButton = document.getElementById('pauseButton');\n    const stopButton = document.getElementById('stopButton');\n    playButton.addEventListener('click', handlePlay);\n    pauseButton.addEventListener('click', handlePause);\n    stopButton.addEventListener('click', handleStop);\n    return () => {\n      playButton.removeEventListener('click', handlePlay);\n      pauseButton.removeEventListener('click', handlePause);\n      stopButton.removeEventListener('click', handleStop);\n    };\n  }, []);\n  const drawScene = ctx => {\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    const scene = scenes[currentScene];\n\n    // Handle image for scene 0\n    if (scene.index === 0) {\n      const img = new Image();\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n      };\n      img.src = scene.media;\n    } else if (scene.index === 1) {\n      // Handle video for scene 1\n      ctx.fillStyle = 'lightgray';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // 确保视频准备好了再绘制\n      if (videoRef.current && videoRef.current.readyState >= 2) {\n        ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n      } else {\n        console.log(\"Video not ready yet\");\n      }\n\n      // 绘制文本\n      drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n    }\n  };\n  const drawText = (ctx, text, x, y) => {\n    if (currentScene === 0) {\n      ctx.fillStyle = 'black';\n      ctx.font = '30px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(text, x, y);\n    }\n  };\n  const handleCanvasClick = () => {\n    if (currentScene === 1) {\n      if (isPlaying) {\n        setIsPlaying(false);\n        videoRef.current.pause();\n      } else {\n        setIsPlaying(true);\n        videoRef.current.play().catch(error => console.error('Error playing video:', error));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1280,\n      height: 720\n      //onClick={handleCanvasClick}\n      ,\n      style: {\n        cursor: 'pointer',\n        backgroundColor: '#f0f0f0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      src: scenes[currentScene].media,\n      style: {\n        display: 'none'\n      } // Hide video element, we draw it on canvas\n      ,\n      onCanPlay: () => {\n        console.log('Video is ready to play');\n      },\n      onEnded: () => {\n        setIsPlaying(false);\n        setCurrentScene(0); // Switch back to scene 0 after video ends\n      },\n      muted: true,\n      controls: true // Optional\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 14\n    }, this), currentScene === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'absolute',\n          top: scenes[1].textPosition.y,\n          left: scenes[1].textPosition.x,\n          fontSize: '30px',\n          fontFamily: 'Arial',\n          textAlign: 'center',\n          animation: 'blink 1s infinite'\n        },\n        children: scenes[1].sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 300,\n        left: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"playButton\",\n        onClick: () => handlePlay(),\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"pauseButton\",\n        onClick: () => handlePause(),\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"stopButton\",\n        onClick: () => handleStop(),\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n};\n_s(ScenePlayer, \"cSOiNFoYlbTVY5s4Woub1DPZgxI=\");\n_c = ScenePlayer;\nexport default ScenePlayer;\nvar _c;\n$RefreshReg$(_c, \"ScenePlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ScenePlayer","_s","canvasRef","videoRef","currentScene","setCurrentScene","timeElapsed","setTimeElapsed","isPlaying","setIsPlaying","handlePlay","current","src","scenes","media","readyState","play","console","log","handlePause","currentTime","paused","pause","handleStop","index","sentence","textPosition","x","y","textAnimation","duration","ctx","getContext","interval","setInterval","prevTime","prevScene","drawScene","clearInterval","playButton","document","getElementById","pauseButton","stopButton","addEventListener","removeEventListener","clearRect","width","height","scene","img","Image","onload","drawImage","drawText","fillStyle","fillRect","text","font","textAlign","fillText","handleCanvasClick","catch","error","children","ref","style","cursor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","display","onCanPlay","onEnded","muted","controls","position","top","left","fontSize","fontFamily","animation","id","onClick","_c","$RefreshReg$"],"sources":["/Users/eva/Documents/pantheonlabQ1/my-app/src/ScenePlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst ScenePlayer = () => {\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const [currentScene, setCurrentScene] = useState(0);\n    const [timeElapsed, setTimeElapsed] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    const handlePlay = () => {\n        if (videoRef.current.src !== scenes[currentScene].media) {\n            videoRef.current.src = scenes[currentScene].media;\n          }\n          if (videoRef.current.readyState >= 3) {\n            videoRef.current.play();\n          } else {\n            console.log('Video not ready yet');\n          }\n     };\n      \n      const handlePause = () => {\n        console.log('Pause button clicked');\n        console.log('Current time:', videoRef.current.currentTime);\n        if (videoRef.current.src !== scenes[currentScene].media) {\n            videoRef.current.src = scenes[currentScene].media;\n        }\n        if (videoRef.current.paused === false) {\n            setIsPlaying(false);\n            videoRef.current.pause();\n        }\n      };\n      \n      const handleStop = () => {\n        if (videoRef.current.src !== scenes[currentScene].media) {\n            videoRef.current.src = scenes[currentScene].media;\n        }\n        setIsPlaying(false);\n        videoRef.current.currentTime = 0;\n        videoRef.current.pause();\n      };\n\n    const scenes = [\n        {\n            index: 0,\n            sentence: \"This is a simple Javascript test\",\n            textPosition: { x: 640, y: 360 }, // Center\n            textAnimation: \"none\",\n            media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\", // Image URL\n            duration: 5, // Scene 0 duration\n        },\n        {\n            index: 1,\n            sentence: \"Here comes the video!\",\n            textPosition: { x: 640, y: 360 }, // Center\n            textAnimation: \"blink\",\n            media: \"/VID.mp4\", // Ensure your video is in the public folder\n            duration: 3, // Scene 1 duration\n        },\n    ];\n    \n    useEffect(() => {\n        const ctx = canvasRef.current.getContext('2d');\n        const interval = setInterval(() => {\n            setTimeElapsed(prevTime => prevTime + 0.1);\n            if (timeElapsed >= scenes[currentScene].duration) {\n                setCurrentScene(prevScene => (prevScene === 0 ? 1 : 0)); // Toggle between scenes\n                setTimeElapsed(0);\n                if (videoRef.current) {\n                    videoRef.current.pause();\n                    videoRef.current.currentTime = 0; // Reset video time\n                    setIsPlaying(false);\n                }\n            }\n            drawScene(ctx);\n        }, 100);\n        return () => clearInterval(interval);\n    }, [timeElapsed, currentScene]);\n\n    useEffect(() => {\n        const playButton = document.getElementById('playButton');\n        const pauseButton = document.getElementById('pauseButton');\n        const stopButton = document.getElementById('stopButton');\n      \n        playButton.addEventListener('click', handlePlay);\n        pauseButton.addEventListener('click', handlePause);\n        stopButton.addEventListener('click', handleStop);\n      \n        return () => {\n          playButton.removeEventListener('click', handlePlay);\n          pauseButton.removeEventListener('click', handlePause);\n          stopButton.removeEventListener('click', handleStop);\n        };\n      }, []);\n\n    const drawScene = (ctx) => {\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        const scene = scenes[currentScene];\n\n        // Handle image for scene 0\n        if (scene.index === 0) {\n            const img = new Image();\n            img.onload = () => {\n                ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n                drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n            };\n            img.src = scene.media;\n        } else if (scene.index === 1) { // Handle video for scene 1\n            ctx.fillStyle = 'lightgray';\n            ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n            \n            // 确保视频准备好了再绘制\n            if (videoRef.current && videoRef.current.readyState >= 2) {\n                ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n            } else {\n                console.log(\"Video not ready yet\");\n            }\n\n            // 绘制文本\n            drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n        }\n    };\n\n    const drawText = (ctx, text, x, y) => {\n        if (currentScene === 0) {\n            ctx.fillStyle = 'black';\n            ctx.font = '30px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText(text, x, y);}\n    };\n\n    const handleCanvasClick = () => {\n        if (currentScene === 1) {\n            if (isPlaying) {\n                setIsPlaying(false);\n                videoRef.current.pause();\n            } else {\n                setIsPlaying(true);\n                videoRef.current.play().catch(error => console.error('Error playing video:', error));\n            }\n        }\n    };\n\n    return (\n        <div>\n            <canvas\n                ref={canvasRef}\n                width={1280}\n                height={720}\n                //onClick={handleCanvasClick}\n                style={{ cursor: 'pointer', backgroundColor: '#f0f0f0' }}\n            />\n             <video\n                ref={videoRef}\n                src={scenes[currentScene].media}\n                style={{ display: 'none' }} // Hide video element, we draw it on canvas\n                onCanPlay={() => {\n                    console.log('Video is ready to play');\n                }}\n                onEnded={() => {\n                    setIsPlaying(false);\n                    setCurrentScene(0); // Switch back to scene 0 after video ends\n                }}\n                muted\n                controls // Optional\n            />\n            {currentScene === 1 && (\n                <div>\n                    <span\n                    style={{\n                        position: 'absolute',\n                        top: scenes[1].textPosition.y,\n                        left: scenes[1].textPosition.x,\n                        fontSize: '30px',\n                        fontFamily: 'Arial',\n                        textAlign: 'center',\n                        animation: 'blink 1s infinite',\n                    }}\n                    >\n                    {scenes[1].sentence}\n                    </span>\n                </div>\n            )}\n            <div style={{ position: 'absolute', top: 300, left: 10 }}>\n                <button id=\"playButton\" onClick={() => handlePlay()}>Play</button>\n                <button id=\"pauseButton\" onClick={() => handlePause()}>Pause</button>\n                <button id=\"stopButton\" onClick={() => handleStop()}>Stop</button>\n            </div>\n        </div>\n    );\n};\n\nexport default ScenePlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMO,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIP,QAAQ,CAACQ,OAAO,CAACC,GAAG,KAAKC,MAAM,CAACT,YAAY,CAAC,CAACU,KAAK,EAAE;MACrDX,QAAQ,CAACQ,OAAO,CAACC,GAAG,GAAGC,MAAM,CAACT,YAAY,CAAC,CAACU,KAAK;IACnD;IACA,IAAIX,QAAQ,CAACQ,OAAO,CAACI,UAAU,IAAI,CAAC,EAAE;MACpCZ,QAAQ,CAACQ,OAAO,CAACK,IAAI,CAAC,CAAC;IACzB,CAAC,MAAM;MACLC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC;EACL,CAAC;EAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnCD,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEf,QAAQ,CAACQ,OAAO,CAACS,WAAW,CAAC;IAC1D,IAAIjB,QAAQ,CAACQ,OAAO,CAACC,GAAG,KAAKC,MAAM,CAACT,YAAY,CAAC,CAACU,KAAK,EAAE;MACrDX,QAAQ,CAACQ,OAAO,CAACC,GAAG,GAAGC,MAAM,CAACT,YAAY,CAAC,CAACU,KAAK;IACrD;IACA,IAAIX,QAAQ,CAACQ,OAAO,CAACU,MAAM,KAAK,KAAK,EAAE;MACnCZ,YAAY,CAAC,KAAK,CAAC;MACnBN,QAAQ,CAACQ,OAAO,CAACW,KAAK,CAAC,CAAC;IAC5B;EACF,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIpB,QAAQ,CAACQ,OAAO,CAACC,GAAG,KAAKC,MAAM,CAACT,YAAY,CAAC,CAACU,KAAK,EAAE;MACrDX,QAAQ,CAACQ,OAAO,CAACC,GAAG,GAAGC,MAAM,CAACT,YAAY,CAAC,CAACU,KAAK;IACrD;IACAL,YAAY,CAAC,KAAK,CAAC;IACnBN,QAAQ,CAACQ,OAAO,CAACS,WAAW,GAAG,CAAC;IAChCjB,QAAQ,CAACQ,OAAO,CAACW,KAAK,CAAC,CAAC;EAC1B,CAAC;EAEH,MAAMT,MAAM,GAAG,CACX;IACIW,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,kCAAkC;IAC5CC,YAAY,EAAE;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAI,CAAC;IAAE;IAClCC,aAAa,EAAE,MAAM;IACrBf,KAAK,EAAE,gEAAgE;IAAE;IACzEgB,QAAQ,EAAE,CAAC,CAAE;EACjB,CAAC,EACD;IACIN,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,uBAAuB;IACjCC,YAAY,EAAE;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAI,CAAC;IAAE;IAClCC,aAAa,EAAE,OAAO;IACtBf,KAAK,EAAE,UAAU;IAAE;IACnBgB,QAAQ,EAAE,CAAC,CAAE;EACjB,CAAC,CACJ;EAEDnC,SAAS,CAAC,MAAM;IACZ,MAAMoC,GAAG,GAAG7B,SAAS,CAACS,OAAO,CAACqB,UAAU,CAAC,IAAI,CAAC;IAC9C,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B3B,cAAc,CAAC4B,QAAQ,IAAIA,QAAQ,GAAG,GAAG,CAAC;MAC1C,IAAI7B,WAAW,IAAIO,MAAM,CAACT,YAAY,CAAC,CAAC0B,QAAQ,EAAE;QAC9CzB,eAAe,CAAC+B,SAAS,IAAKA,SAAS,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC;QACzD7B,cAAc,CAAC,CAAC,CAAC;QACjB,IAAIJ,QAAQ,CAACQ,OAAO,EAAE;UAClBR,QAAQ,CAACQ,OAAO,CAACW,KAAK,CAAC,CAAC;UACxBnB,QAAQ,CAACQ,OAAO,CAACS,WAAW,GAAG,CAAC,CAAC,CAAC;UAClCX,YAAY,CAAC,KAAK,CAAC;QACvB;MACJ;MACA4B,SAAS,CAACN,GAAG,CAAC;IAClB,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMO,aAAa,CAACL,QAAQ,CAAC;EACxC,CAAC,EAAE,CAAC3B,WAAW,EAAEF,YAAY,CAAC,CAAC;EAE/BT,SAAS,CAAC,MAAM;IACZ,MAAM4C,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IACxD,MAAMC,WAAW,GAAGF,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IAC1D,MAAME,UAAU,GAAGH,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IAExDF,UAAU,CAACK,gBAAgB,CAAC,OAAO,EAAElC,UAAU,CAAC;IAChDgC,WAAW,CAACE,gBAAgB,CAAC,OAAO,EAAEzB,WAAW,CAAC;IAClDwB,UAAU,CAACC,gBAAgB,CAAC,OAAO,EAAErB,UAAU,CAAC;IAEhD,OAAO,MAAM;MACXgB,UAAU,CAACM,mBAAmB,CAAC,OAAO,EAAEnC,UAAU,CAAC;MACnDgC,WAAW,CAACG,mBAAmB,CAAC,OAAO,EAAE1B,WAAW,CAAC;MACrDwB,UAAU,CAACE,mBAAmB,CAAC,OAAO,EAAEtB,UAAU,CAAC;IACrD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAER,MAAMc,SAAS,GAAIN,GAAG,IAAK;IACvBA,GAAG,CAACe,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE5C,SAAS,CAACS,OAAO,CAACoC,KAAK,EAAE7C,SAAS,CAACS,OAAO,CAACqC,MAAM,CAAC;IACtE,MAAMC,KAAK,GAAGpC,MAAM,CAACT,YAAY,CAAC;;IAElC;IACA,IAAI6C,KAAK,CAACzB,KAAK,KAAK,CAAC,EAAE;MACnB,MAAM0B,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,MAAM,GAAG,MAAM;QACfrB,GAAG,CAACsB,SAAS,CAACH,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEhD,SAAS,CAACS,OAAO,CAACoC,KAAK,EAAE7C,SAAS,CAACS,OAAO,CAACqC,MAAM,CAAC;QAC3EM,QAAQ,CAACvB,GAAG,EAAEkB,KAAK,CAACxB,QAAQ,EAAEwB,KAAK,CAACvB,YAAY,CAACC,CAAC,EAAEsB,KAAK,CAACvB,YAAY,CAACE,CAAC,CAAC;MAC7E,CAAC;MACDsB,GAAG,CAACtC,GAAG,GAAGqC,KAAK,CAACnC,KAAK;IACzB,CAAC,MAAM,IAAImC,KAAK,CAACzB,KAAK,KAAK,CAAC,EAAE;MAAE;MAC5BO,GAAG,CAACwB,SAAS,GAAG,WAAW;MAC3BxB,GAAG,CAACyB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEtD,SAAS,CAACS,OAAO,CAACoC,KAAK,EAAE7C,SAAS,CAACS,OAAO,CAACqC,MAAM,CAAC;;MAErE;MACA,IAAI7C,QAAQ,CAACQ,OAAO,IAAIR,QAAQ,CAACQ,OAAO,CAACI,UAAU,IAAI,CAAC,EAAE;QACtDgB,GAAG,CAACsB,SAAS,CAAClD,QAAQ,CAACQ,OAAO,EAAE,CAAC,EAAE,CAAC,EAAET,SAAS,CAACS,OAAO,CAACoC,KAAK,EAAE7C,SAAS,CAACS,OAAO,CAACqC,MAAM,CAAC;MAC5F,CAAC,MAAM;QACH/B,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACtC;;MAEA;MACAoC,QAAQ,CAACvB,GAAG,EAAEkB,KAAK,CAACxB,QAAQ,EAAEwB,KAAK,CAACvB,YAAY,CAACC,CAAC,EAAEsB,KAAK,CAACvB,YAAY,CAACE,CAAC,CAAC;IAC7E;EACJ,CAAC;EAED,MAAM0B,QAAQ,GAAGA,CAACvB,GAAG,EAAE0B,IAAI,EAAE9B,CAAC,EAAEC,CAAC,KAAK;IAClC,IAAIxB,YAAY,KAAK,CAAC,EAAE;MACpB2B,GAAG,CAACwB,SAAS,GAAG,OAAO;MACvBxB,GAAG,CAAC2B,IAAI,GAAG,YAAY;MACvB3B,GAAG,CAAC4B,SAAS,GAAG,QAAQ;MACxB5B,GAAG,CAAC6B,QAAQ,CAACH,IAAI,EAAE9B,CAAC,EAAEC,CAAC,CAAC;IAAC;EACjC,CAAC;EAED,MAAMiC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIzD,YAAY,KAAK,CAAC,EAAE;MACpB,IAAII,SAAS,EAAE;QACXC,YAAY,CAAC,KAAK,CAAC;QACnBN,QAAQ,CAACQ,OAAO,CAACW,KAAK,CAAC,CAAC;MAC5B,CAAC,MAAM;QACHb,YAAY,CAAC,IAAI,CAAC;QAClBN,QAAQ,CAACQ,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC8C,KAAK,CAACC,KAAK,IAAI9C,OAAO,CAAC8C,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;MACxF;IACJ;EACJ,CAAC;EAED,oBACIhE,OAAA;IAAAiE,QAAA,gBACIjE,OAAA;MACIkE,GAAG,EAAE/D,SAAU;MACf6C,KAAK,EAAE,IAAK;MACZC,MAAM,EAAE;MACR;MAAA;MACAkB,KAAK,EAAE;QAAEC,MAAM,EAAE,SAAS;QAAEC,eAAe,EAAE;MAAU;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACDzE,OAAA;MACGkE,GAAG,EAAE9D,QAAS;MACdS,GAAG,EAAEC,MAAM,CAACT,YAAY,CAAC,CAACU,KAAM;MAChCoD,KAAK,EAAE;QAAEO,OAAO,EAAE;MAAO,CAAE,CAAC;MAAA;MAC5BC,SAAS,EAAEA,CAAA,KAAM;QACbzD,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACzC,CAAE;MACFyD,OAAO,EAAEA,CAAA,KAAM;QACXlE,YAAY,CAAC,KAAK,CAAC;QACnBJ,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;MACxB,CAAE;MACFuE,KAAK;MACLC,QAAQ,OAAC;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,EACDpE,YAAY,KAAK,CAAC,iBACfL,OAAA;MAAAiE,QAAA,eACIjE,OAAA;QACAmE,KAAK,EAAE;UACHY,QAAQ,EAAE,UAAU;UACpBC,GAAG,EAAElE,MAAM,CAAC,CAAC,CAAC,CAACa,YAAY,CAACE,CAAC;UAC7BoD,IAAI,EAAEnE,MAAM,CAAC,CAAC,CAAC,CAACa,YAAY,CAACC,CAAC;UAC9BsD,QAAQ,EAAE,MAAM;UAChBC,UAAU,EAAE,OAAO;UACnBvB,SAAS,EAAE,QAAQ;UACnBwB,SAAS,EAAE;QACf,CAAE;QAAAnB,QAAA,EAEDnD,MAAM,CAAC,CAAC,CAAC,CAACY;MAAQ;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACR,eACDzE,OAAA;MAAKmE,KAAK,EAAE;QAAEY,QAAQ,EAAE,UAAU;QAAEC,GAAG,EAAE,GAAG;QAAEC,IAAI,EAAE;MAAG,CAAE;MAAAhB,QAAA,gBACrDjE,OAAA;QAAQqF,EAAE,EAAC,YAAY;QAACC,OAAO,EAAEA,CAAA,KAAM3E,UAAU,CAAC,CAAE;QAAAsD,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClEzE,OAAA;QAAQqF,EAAE,EAAC,aAAa;QAACC,OAAO,EAAEA,CAAA,KAAMlE,WAAW,CAAC,CAAE;QAAA6C,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrEzE,OAAA;QAAQqF,EAAE,EAAC,YAAY;QAACC,OAAO,EAAEA,CAAA,KAAM9D,UAAU,CAAC,CAAE;QAAAyC,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvE,EAAA,CA3LID,WAAW;AAAAsF,EAAA,GAAXtF,WAAW;AA6LjB,eAAeA,WAAW;AAAC,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}