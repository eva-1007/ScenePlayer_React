{"ast":null,"code":"var _jsxFileName = \"/Users/eva/Documents/react/pantheonlab/my-app/src/ScenePlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScenePlayer = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [currentScene, setCurrentScene] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isTextVisible, setIsTextVisible] = useState(true);\n  const scenes = [{\n    index: 0,\n    sentence: \"This is a simple Javascript test\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    textAnimation: \"typing\",\n    media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\",\n    // Yellow background\n    duration: 3\n  }, {\n    index: 1,\n    sentence: \"Here comes the video!\",\n    textPosition: {\n      x: 960,\n      y: 100\n    },\n    // Top-right\n    textAnimation: \"blink\",\n    media: \"https://www.w3schools.com/html/mov_bbb.mp4\",\n    // Replace with a working video URL\n    duration: 5\n  }];\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    const interval = setInterval(() => {\n      setTimeElapsed(prevTime => prevTime + 0.1);\n      if (timeElapsed >= scenes[currentScene].duration) {\n        setCurrentScene(prevScene => (prevScene + 1) % scenes.length);\n        setTimeElapsed(0);\n        // Stop video when scene changes\n        if (videoRef.current) videoRef.current.pause();\n      }\n      drawScene(ctx);\n    }, 100);\n    return () => clearInterval(interval);\n  }, [timeElapsed, currentScene]);\n  useEffect(() => {\n    let blinkInterval;\n    if (scenes[currentScene].textAnimation === \"blink\") {\n      blinkInterval = setInterval(() => {\n        setIsTextVisible(prev => !prev);\n      }, 500);\n    } else {\n      setIsTextVisible(true);\n    }\n    return () => clearInterval(blinkInterval);\n  }, [currentScene]);\n  const drawScene = ctx => {\n    const scene = scenes[currentScene];\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    if (scene.media.startsWith('http')) {\n      // Handle image\n      const img = new Image();\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n      };\n      img.src = scene.media;\n    } else {\n      // Handle video (light gray background)\n      ctx.fillStyle = 'lightgray';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n    }\n  };\n  const drawText = (ctx, text, x, y) => {\n    if (scenes[currentScene].textAnimation === \"blink\" && !isTextVisible) return;\n    ctx.fillStyle = 'black';\n    ctx.font = '30px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(text, x, y);\n  };\n  const handleCanvasClick = () => {\n    if (currentScene === 1) {\n      if (isPlaying) {\n        setIsPlaying(false);\n        videoRef.current.pause();\n      } else {\n        setIsPlaying(true);\n        videoRef.current.play().catch(error => console.error('Error playing video:', error));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1280,\n      height: 720,\n      onClick: handleCanvasClick,\n      style: {\n        cursor: 'pointer',\n        backgroundColor: '#f0f0f0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      src: scenes[1].media // Corrected video src\n      ,\n      style: {\n        display: 'none'\n      },\n      onEnded: () => setIsPlaying(false),\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(ScenePlayer, \"ynvfMEDd6s1XeuChWmaeWfwm8es=\");\n_c = ScenePlayer;\nexport default ScenePlayer;\nvar _c;\n$RefreshReg$(_c, \"ScenePlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ScenePlayer","_s","canvasRef","videoRef","currentScene","setCurrentScene","timeElapsed","setTimeElapsed","isPlaying","setIsPlaying","isTextVisible","setIsTextVisible","scenes","index","sentence","textPosition","x","y","textAnimation","media","duration","ctx","current","getContext","interval","setInterval","prevTime","prevScene","length","pause","drawScene","clearInterval","blinkInterval","prev","scene","clearRect","width","height","startsWith","img","Image","onload","drawImage","drawText","src","fillStyle","fillRect","text","font","textAlign","fillText","handleCanvasClick","play","catch","error","console","children","ref","onClick","style","cursor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","display","onEnded","muted","_c","$RefreshReg$"],"sources":["/Users/eva/Documents/react/pantheonlab/my-app/src/ScenePlayer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst ScenePlayer = () => {\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const [currentScene, setCurrentScene] = useState(0);\n    const [timeElapsed, setTimeElapsed] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [isTextVisible, setIsTextVisible] = useState(true);\n\n    const scenes = [\n        {\n            index: 0,\n            sentence: \"This is a simple Javascript test\",\n            textPosition: { x: 640, y: 360 }, // Center\n            textAnimation: \"typing\",\n            media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\", // Yellow background\n            duration: 3,\n        },\n        {\n            index: 1,\n            sentence: \"Here comes the video!\",\n            textPosition: { x: 960, y: 100 }, // Top-right\n            textAnimation: \"blink\",\n            media: \"https://www.w3schools.com/html/mov_bbb.mp4\", // Replace with a working video URL\n            duration: 5,\n        },\n    ];\n\n    useEffect(() => {\n        const ctx = canvasRef.current.getContext('2d');\n        const interval = setInterval(() => {\n            setTimeElapsed(prevTime => prevTime + 0.1);\n            if (timeElapsed >= scenes[currentScene].duration) {\n                setCurrentScene(prevScene => (prevScene + 1) % scenes.length);\n                setTimeElapsed(0);\n                // Stop video when scene changes\n                if (videoRef.current) videoRef.current.pause();\n            }\n            drawScene(ctx);\n        }, 100);\n        return () => clearInterval(interval);\n    }, [timeElapsed, currentScene]);\n\n\n    useEffect(() => {\n        let blinkInterval;\n        if (scenes[currentScene].textAnimation === \"blink\") {\n            blinkInterval = setInterval(() => {\n                setIsTextVisible(prev => !prev);\n            }, 500);\n        } else {\n            setIsTextVisible(true);\n        }\n        return () => clearInterval(blinkInterval);\n    }, [currentScene]);\n\n    const drawScene = (ctx) => {\n        const scene = scenes[currentScene];\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n        if (scene.media.startsWith('http')) { // Handle image\n            const img = new Image();\n            img.onload = () => {\n                ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n                drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n            };\n            img.src = scene.media;\n        } else { // Handle video (light gray background)\n            ctx.fillStyle = 'lightgray';\n            ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n            drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n        }\n    };\n\n    const drawText = (ctx, text, x, y) => {\n        if (scenes[currentScene].textAnimation === \"blink\" && !isTextVisible) return;\n        ctx.fillStyle = 'black';\n        ctx.font = '30px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(text, x, y);\n    };\n\n    const handleCanvasClick = () => {\n        if (currentScene === 1) {\n            if (isPlaying) {\n                setIsPlaying(false);\n                videoRef.current.pause();\n            } else {\n                setIsPlaying(true);\n                videoRef.current.play().catch(error => console.error('Error playing video:', error));\n            }\n        }\n    };\n\n    return (\n        <div>\n            <canvas\n                ref={canvasRef}\n                width={1280}\n                height={720}\n                onClick={handleCanvasClick}\n                style={{ cursor: 'pointer', backgroundColor: '#f0f0f0' }}\n            />\n            <video\n                ref={videoRef}\n                src={scenes[1].media} // Corrected video src\n                style={{ display: 'none' }}\n                onEnded={() => setIsPlaying(false)}\n                muted\n            />\n        </div>\n    );\n};\n\nexport default ScenePlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}