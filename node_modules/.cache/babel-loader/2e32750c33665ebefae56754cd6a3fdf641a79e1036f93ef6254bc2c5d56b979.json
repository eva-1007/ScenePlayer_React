{"ast":null,"code":"var _jsxFileName = \"/Users/eva/Documents/pantheonlabQ1/my-app/src/ScenePlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scenes = [{\n  index: 0,\n  sentence: \"This is a simple Javascript test\",\n  textPosition: {\n    x: 320,\n    y: 180\n  },\n  // Center for canvas of 640x360\n  textAnimation: \"none\",\n  media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\",\n  // Image URL\n  duration: 5 // Scene 0 duration\n}, {\n  index: 1,\n  sentence: \"Here comes the video!\",\n  textPosition: {\n    x: 320,\n    y: 180\n  },\n  // Center for canvas of 640x360\n  textAnimation: \"blink\",\n  media: \"/VID.mp4\",\n  // Ensure your video is in the public folder\n  duration: 3 // Scene 1 duration\n}];\nconst ScenePlayer = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const videoRef1 = useRef(null);\n  const videoRef2 = useRef(null);\n  const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    videoRef1.current = document.createElement('video');\n    videoRef1.current.src = scenes[0].media; // 第一个场景的视频或图像\n    videoRef2.current = document.createElement('video');\n    videoRef2.current.src = scenes[1].media; // 第二个场景的视频\n\n    // 加载第一个视频\n    videoRef1.current.load();\n  }, []);\n\n  // 将 drawVideo 移到这里\n  const drawVideo = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    if (isPlaying) {\n      context.clearRect(0, 0, canvas.width, canvas.height); // 清空画布\n      const currentVideo = currentSceneIndex === 0 ? videoRef1.current : videoRef2.current;\n      context.drawImage(currentVideo, 0, 0, canvas.width, canvas.height);\n\n      // 绘制文本\n      const currentScene = scenes[currentSceneIndex];\n      context.fillStyle = 'white';\n      context.font = '24px Arial';\n\n      // 根据动画效果绘制文本\n      if (currentScene.textAnimation === \"blink\") {\n        const blink = Math.floor(Date.now() / 500) % 2 === 0; // 每500ms闪烁一次\n        if (blink) {\n          context.fillText(currentScene.sentence, currentScene.textPosition.x, currentScene.textPosition.y);\n        }\n      } else {\n        context.fillText(currentScene.sentence, currentScene.textPosition.x, currentScene.textPosition.y);\n      }\n      requestAnimationFrame(drawVideo);\n    }\n  };\n  const playVideo = () => {\n    setIsPlaying(true);\n    const currentVideo = currentSceneIndex === 0 ? videoRef1.current : videoRef2.current;\n    currentVideo.play();\n    drawVideo(); // 确保 drawVideo 在这里被调用\n  };\n  const pauseVideo = () => {\n    setIsPlaying(false);\n    const currentVideo = currentSceneIndex === 0 ? videoRef1.current : videoRef2.current;\n    currentVideo.pause();\n  };\n  const stopVideo = () => {\n    setIsPlaying(false);\n    const currentVideo = currentSceneIndex === 0 ? videoRef1.current : videoRef2.current;\n    currentVideo.pause();\n    currentVideo.currentTime = 0; // 重置到开头\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height); // 清空画布\n  };\n  useEffect(() => {\n    const handleVideoEnd = () => {\n      setCurrentSceneIndex(prevIndex => (prevIndex + 1) % scenes.length);\n      playVideo();\n    };\n    videoRef1.current.addEventListener('ended', handleVideoEnd);\n    videoRef2.current.addEventListener('ended', handleVideoEnd);\n    return () => {\n      videoRef1.current.removeEventListener('ended', handleVideoEnd);\n      videoRef2.current.removeEventListener('ended', handleVideoEnd);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"640\",\n      height: \"360\",\n      style: {\n        border: '1px solid black',\n        cursor: 'pointer'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(ScenePlayer, \"M/+lV+jjxlJqyozHTypO43AOi84=\");\n_c = ScenePlayer;\nexport default ScenePlayer;\nvar _c;\n$RefreshReg$(_c, \"ScenePlayer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","scenes","index","sentence","textPosition","x","y","textAnimation","media","duration","ScenePlayer","_s","canvasRef","videoRef1","videoRef2","currentSceneIndex","setCurrentSceneIndex","isPlaying","setIsPlaying","current","document","createElement","src","load","drawVideo","canvas","context","getContext","clearRect","width","height","currentVideo","drawImage","currentScene","fillStyle","font","blink","Math","floor","Date","now","fillText","requestAnimationFrame","playVideo","play","pauseVideo","pause","stopVideo","currentTime","handleVideoEnd","prevIndex","length","addEventListener","removeEventListener","children","ref","style","border","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eva/Documents/pantheonlabQ1/my-app/src/ScenePlayer.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nconst scenes = [\n    {\n        index: 0,\n        sentence: \"This is a simple Javascript test\",\n        textPosition: { x: 320, y: 180 }, // Center for canvas of 640x360\n        textAnimation: \"none\",\n        media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\", // Image URL\n        duration: 5, // Scene 0 duration\n    },\n    {\n        index: 1,\n        sentence: \"Here comes the video!\",\n        textPosition: { x: 320, y: 180 }, // Center for canvas of 640x360\n        textAnimation: \"blink\",\n        media: \"/VID.mp4\", // Ensure your video is in the public folder\n        duration: 3, // Scene 1 duration\n    },\n];\n\nconst ScenePlayer = () => {\n    const canvasRef = useRef(null);\n    const videoRef1 = useRef(null);\n    const videoRef2 = useRef(null);\n    const [currentSceneIndex, setCurrentSceneIndex] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    useEffect(() => {\n        videoRef1.current = document.createElement('video');\n        videoRef1.current.src = scenes[0].media; // 第一个场景的视频或图像\n        videoRef2.current = document.createElement('video');\n        videoRef2.current.src = scenes[1].media; // 第二个场景的视频\n\n        // 加载第一个视频\n        videoRef1.current.load();\n    }, []);\n\n    // 将 drawVideo 移到这里\n    const drawVideo = () => {\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d');\n        if (isPlaying) {\n            context.clearRect(0, 0, canvas.width, canvas.height); // 清空画布\n            const currentVideo = currentSceneIndex === 0 ? videoRef1.current : videoRef2.current;\n\n            context.drawImage(currentVideo, 0, 0, canvas.width, canvas.height);\n            \n            // 绘制文本\n            const currentScene = scenes[currentSceneIndex];\n            context.fillStyle = 'white';\n            context.font = '24px Arial';\n            \n            // 根据动画效果绘制文本\n            if (currentScene.textAnimation === \"blink\") {\n                const blink = Math.floor(Date.now() / 500) % 2 === 0; // 每500ms闪烁一次\n                if (blink) {\n                    context.fillText(currentScene.sentence, currentScene.textPosition.x, currentScene.textPosition.y);\n                }\n            } else {\n                context.fillText(currentScene.sentence, currentScene.textPosition.x, currentScene.textPosition.y);\n            }\n\n            requestAnimationFrame(drawVideo);\n        }\n    };\n\n    const playVideo = () => {\n        setIsPlaying(true);\n        const currentVideo = currentSceneIndex === 0 ? videoRef1.current : videoRef2.current;\n        currentVideo.play();\n        drawVideo(); // 确保 drawVideo 在这里被调用\n    };\n\n    const pauseVideo = () => {\n        setIsPlaying(false);\n        const currentVideo = currentSceneIndex === 0 ? videoRef1.current : videoRef2.current;\n        currentVideo.pause();\n    };\n\n    const stopVideo = () => {\n        setIsPlaying(false);\n        const currentVideo = currentSceneIndex === 0 ? videoRef1.current : videoRef2.current;\n        currentVideo.pause();\n        currentVideo.currentTime = 0; // 重置到开头\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d');\n        context.clearRect(0, 0, canvas.width, canvas.height); // 清空画布\n    };\n\n    useEffect(() => {\n        const handleVideoEnd = () => {\n            setCurrentSceneIndex((prevIndex) => (prevIndex + 1) % scenes.length);\n            playVideo();\n        };\n\n        videoRef1.current.addEventListener('ended', handleVideoEnd);\n        videoRef2.current.addEventListener('ended', handleVideoEnd);\n\n        return () => {\n            videoRef1.current.removeEventListener('ended', handleVideoEnd);\n            videoRef2.current.removeEventListener('ended', handleVideoEnd);\n        };\n    }, []);\n\n    return (\n        <div>\n            <canvas ref={canvasRef} width=\"640\" height=\"360\" style={{ border: '1px solid black', cursor: 'pointer' }} />\n        </div>\n    );\n};\n\nexport default ScenePlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}