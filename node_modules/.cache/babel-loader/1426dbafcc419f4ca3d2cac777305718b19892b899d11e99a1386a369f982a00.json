{"ast":null,"code":"var _jsxFileName = \"/Users/eva/Documents/react/pantheonlab/my-app/src/ScenePlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useMemo, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScenePlayer = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [currentScene, setCurrentScene] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const scenes = useMemo(() => [{\n    index: 0,\n    sentence: \"This is a simple Javascript test\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\",\n    // 视频替换为图片\n    duration: 5 // Scene 0 duration\n  }, {\n    index: 1,\n    sentence: \"Here comes the video!\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    media: \"/VID.mp4\",\n    // 场景 1 视频路径\n    duration: 3 // Scene 1 duration\n  }], []);\n  const drawScene = useCallback(ctx => {\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    const scene = scenes[currentScene];\n\n    // Draw the image or video frame for the current scene\n    if (videoRef.current && currentScene === 1) {\n      ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n    } else if (currentScene === 0) {\n      const img = new Image();\n      img.src = scene.media;\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n      };\n    }\n\n    // Draw text\n    drawText(ctx, displayedText, scene.textPosition.x, scene.textPosition.y);\n  }, [currentScene, displayedText, scenes]);\n  const drawText = (ctx, text, x, y) => {\n    ctx.fillStyle = 'black';\n    ctx.font = '30px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(text, x, y);\n  };\n  useEffect(() => {\n    if (currentScene === 0) {\n      let index = 0;\n      const typingInterval = setInterval(() => {\n        if (index < scenes[currentScene].sentence.length) {\n          setDisplayedText(prev => prev + scenes[currentScene].sentence[index]);\n          index++;\n        } else {\n          clearInterval(typingInterval);\n        }\n      }, 150); // 打字速度\n\n      return () => clearInterval(typingInterval);\n    } else {\n      setDisplayedText(\"\"); // Reset text for the next scene\n    }\n  }, [currentScene]);\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    const interval = setInterval(() => {\n      setTimeElapsed(prevTime => prevTime + 0.1);\n      if (timeElapsed >= scenes[currentScene].duration) {\n        setCurrentScene(prevScene => prevScene === 0 ? 1 : 0); // Toggle between scenes\n        setTimeElapsed(0);\n        if (videoRef.current) {\n          videoRef.current.pause();\n          videoRef.current.currentTime = 0; // Reset video time\n          setIsPlaying(false);\n        }\n      }\n      drawScene(ctx);\n    }, 100);\n    return () => clearInterval(interval);\n  }, [timeElapsed, currentScene, drawScene]);\n  const handleCanvasClick = () => {\n    if (isPlaying) {\n      setIsPlaying(false);\n      videoRef.current.pause();\n    } else {\n      setIsPlaying(true);\n      videoRef.current.play().catch(error => console.error('Error playing video:', error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1280,\n      height: 720,\n      onClick: handleCanvasClick,\n      style: {\n        cursor: 'pointer',\n        backgroundColor: '#f0f0f0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      src: scenes[currentScene].media,\n      style: {\n        display: 'none'\n      } // Hide video element, we draw it on canvas\n      ,\n      onEnded: () => {\n        setCurrentScene(prev => prev === 0 ? 1 : 0); // Switch to next scene\n        setIsPlaying(false);\n      },\n      muted: true,\n      controls: true // Optional\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(ScenePlayer, \"3bCVkD/LET3M6/hFD4A00nSTQmE=\");\n_c = ScenePlayer;\nexport default ScenePlayer;\nvar _c;\n$RefreshReg$(_c, \"ScenePlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useMemo","useCallback","jsxDEV","_jsxDEV","ScenePlayer","_s","canvasRef","videoRef","currentScene","setCurrentScene","timeElapsed","setTimeElapsed","isPlaying","setIsPlaying","displayedText","setDisplayedText","scenes","index","sentence","textPosition","x","y","media","duration","drawScene","ctx","clearRect","current","width","height","scene","drawImage","img","Image","src","onload","drawText","text","fillStyle","font","textAlign","fillText","typingInterval","setInterval","length","prev","clearInterval","getContext","interval","prevTime","prevScene","pause","currentTime","handleCanvasClick","play","catch","error","console","children","ref","onClick","style","cursor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","display","onEnded","muted","controls","_c","$RefreshReg$"],"sources":["/Users/eva/Documents/react/pantheonlab/my-app/src/ScenePlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useMemo, useCallback } from 'react';\n\nconst ScenePlayer = () => {\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const [currentScene, setCurrentScene] = useState(0);\n    const [timeElapsed, setTimeElapsed] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [displayedText, setDisplayedText] = useState(\"\");\n\n    const scenes = useMemo(() => [\n        {\n            index: 0,\n            sentence: \"This is a simple Javascript test\",\n            textPosition: { x: 640, y: 360 }, // Center\n            media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\", // 视频替换为图片\n            duration: 5, // Scene 0 duration\n        },\n        {\n            index: 1,\n            sentence: \"Here comes the video!\",\n            textPosition: { x: 640, y: 360 }, // Center\n            media: \"/VID.mp4\", // 场景 1 视频路径\n            duration: 3, // Scene 1 duration\n        },\n    ], []);\n\n    const drawScene = useCallback((ctx) => {\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        const scene = scenes[currentScene];\n\n        // Draw the image or video frame for the current scene\n        if (videoRef.current && currentScene === 1) {\n            ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        } else if (currentScene === 0) {\n            const img = new Image();\n            img.src = scene.media;\n            img.onload = () => {\n                ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n            };\n        }\n\n        // Draw text\n        drawText(ctx, displayedText, scene.textPosition.x, scene.textPosition.y);\n    }, [currentScene, displayedText, scenes]);\n\n    const drawText = (ctx, text, x, y) => {\n        ctx.fillStyle = 'black';\n        ctx.font = '30px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(text, x, y);\n    };\n\n    useEffect(() => {\n        if (currentScene === 0) {\n            let index = 0;\n            const typingInterval = setInterval(() => {\n                if (index < scenes[currentScene].sentence.length) {\n                    setDisplayedText(prev => prev + scenes[currentScene].sentence[index]);\n                    index++;\n                } else {\n                    clearInterval(typingInterval);\n                }\n            }, 150); // 打字速度\n\n            return () => clearInterval(typingInterval);\n        } else {\n            setDisplayedText(\"\"); // Reset text for the next scene\n        }\n    }, [currentScene]);\n\n    useEffect(() => {\n        const ctx = canvasRef.current.getContext('2d');\n        const interval = setInterval(() => {\n            setTimeElapsed(prevTime => prevTime + 0.1);\n            if (timeElapsed >= scenes[currentScene].duration) {\n                setCurrentScene(prevScene => (prevScene === 0 ? 1 : 0)); // Toggle between scenes\n                setTimeElapsed(0);\n                if (videoRef.current) {\n                    videoRef.current.pause();\n                    videoRef.current.currentTime = 0; // Reset video time\n                    setIsPlaying(false);\n                }\n            }\n            drawScene(ctx);\n        }, 100);\n\n        return () => clearInterval(interval);\n    }, [timeElapsed, currentScene, drawScene]);\n\n    const handleCanvasClick = () => {\n        if (isPlaying) {\n            setIsPlaying(false);\n            videoRef.current.pause();\n        } else {\n            setIsPlaying(true);\n            videoRef.current.play().catch(error => console.error('Error playing video:', error));\n        }\n    };\n\n    return (\n        <div>\n            <canvas\n                ref={canvasRef}\n                width={1280}\n                height={720}\n                onClick={handleCanvasClick}\n                style={{ cursor: 'pointer', backgroundColor: '#f0f0f0' }}\n            />\n            <video\n                ref={videoRef}\n                src={scenes[currentScene].media}\n                style={{ display: 'none' }} // Hide video element, we draw it on canvas\n                onEnded={() => {\n                    setCurrentScene(prev => (prev === 0 ? 1 : 0)); // Switch to next scene\n                    setIsPlaying(false);\n                }}\n                muted\n                controls // Optional\n            />\n        </div>\n    );\n};\n\nexport default ScenePlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}