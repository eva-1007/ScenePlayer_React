{"ast":null,"code":"var _jsxFileName = \"/Users/eva/Documents/react/pantheonlab/my-app/src/ScenePlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useMemo, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScenePlayer = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [currentScene, setCurrentScene] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const scenes = useMemo(() => [{\n    index: 0,\n    sentence: \"This is a simple Javascript test\",\n    textAnimation: \"typing\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    media: \"/scene0.mp4\",\n    // 将场景 0 转换为视频\n    duration: 5 // Scene 0 duration\n  }, {\n    index: 1,\n    sentence: \"Here comes the video!\",\n    textAnimation: \"blink\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    media: \"/VID.mp4\",\n    // 确保视频在公共文件夹中\n    duration: 3 // Scene 1 duration\n  }], []);\n  const drawScene = useCallback(ctx => {\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    const scene = scenes[currentScene];\n\n    // Draw the video frame for both scenes\n    if (videoRef.current && currentScene === 0) {\n      ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n    } else if (currentScene === 1) {\n      ctx.fillStyle = 'lightgray';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n    }\n\n    // Draw text if applicable\n    if (scene.index === 0 || scene.index === 1) {\n      drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n    }\n  }, [currentScene, scenes]);\n  const drawText = (ctx, text, x, y) => {\n    ctx.fillStyle = 'black';\n    ctx.font = '30px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(text, x, y);\n  };\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    const interval = setInterval(() => {\n      setTimeElapsed(prevTime => prevTime + 0.1);\n      if (timeElapsed >= scenes[currentScene].duration) {\n        setCurrentScene(prevScene => prevScene === 0 ? 1 : 0); // Toggle between scenes\n        setTimeElapsed(0);\n        if (videoRef.current) {\n          videoRef.current.pause();\n          videoRef.current.currentTime = 0; // Reset video time\n          setIsPlaying(false);\n        }\n      }\n      drawScene(ctx);\n    }, 100);\n    return () => clearInterval(interval);\n  }, [timeElapsed, currentScene, drawScene, scenes]); // 添加 scenes\n\n  const handleCanvasClick = () => {\n    if (isPlaying) {\n      setIsPlaying(false);\n      videoRef.current.pause();\n    } else {\n      setIsPlaying(true);\n      videoRef.current.play().catch(error => console.error('Error playing video:', error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1280,\n      height: 720,\n      onClick: handleCanvasClick,\n      style: {\n        cursor: 'pointer',\n        backgroundColor: '#f0f0f0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      src: scenes[currentScene].media,\n      style: {\n        display: 'none'\n      } // Hide video element, we draw it on canvas\n      ,\n      onEnded: () => {\n        setCurrentScene(prev => prev === 0 ? 1 : 0); // Switch to next scene\n        setIsPlaying(false);\n      },\n      muted: true,\n      controls: true // Optional\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(ScenePlayer, \"1zkqr5igF+58ig30d7a+X29EAu8=\");\n_c = ScenePlayer;\nexport default ScenePlayer;\nvar _c;\n$RefreshReg$(_c, \"ScenePlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useMemo","useCallback","jsxDEV","_jsxDEV","ScenePlayer","_s","canvasRef","videoRef","currentScene","setCurrentScene","timeElapsed","setTimeElapsed","isPlaying","setIsPlaying","scenes","index","sentence","textAnimation","textPosition","x","y","media","duration","drawScene","ctx","clearRect","current","width","height","scene","drawImage","fillStyle","fillRect","drawText","text","font","textAlign","fillText","getContext","interval","setInterval","prevTime","prevScene","pause","currentTime","clearInterval","handleCanvasClick","play","catch","error","console","children","ref","onClick","style","cursor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","src","display","onEnded","prev","muted","controls","_c","$RefreshReg$"],"sources":["/Users/eva/Documents/react/pantheonlab/my-app/src/ScenePlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useMemo, useCallback } from 'react';\n\nconst ScenePlayer = () => {\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const [currentScene, setCurrentScene] = useState(0);\n    const [timeElapsed, setTimeElapsed] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    const scenes = useMemo(() => [\n        {\n            index: 0,\n            sentence: \"This is a simple Javascript test\",\n            textAnimation: \"typing\",\n            textPosition: { x: 640, y: 360 }, // Center\n            media: \"/scene0.mp4\", // 将场景 0 转换为视频\n            duration: 5, // Scene 0 duration\n        },\n        {\n            index: 1,\n            sentence: \"Here comes the video!\",\n            textAnimation: \"blink\",\n            textPosition: { x: 640, y: 360 }, // Center\n            media: \"/VID.mp4\", // 确保视频在公共文件夹中\n            duration: 3, // Scene 1 duration\n        },\n    ], []);\n\n    const drawScene = useCallback((ctx) => {\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        const scene = scenes[currentScene];\n\n        // Draw the video frame for both scenes\n        if (videoRef.current && currentScene === 0) {\n            ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        } else if (currentScene === 1) {\n            ctx.fillStyle = 'lightgray';\n            ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n            ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        }\n\n        // Draw text if applicable\n        if (scene.index === 0 || scene.index === 1) {\n            drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n        }\n    }, [currentScene, scenes]);\n\n    const drawText = (ctx, text, x, y) => {\n        ctx.fillStyle = 'black';\n        ctx.font = '30px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(text, x, y);\n    };\n\n    useEffect(() => {\n        const ctx = canvasRef.current.getContext('2d');\n        const interval = setInterval(() => {\n            setTimeElapsed(prevTime => prevTime + 0.1);\n            if (timeElapsed >= scenes[currentScene].duration) {\n                setCurrentScene(prevScene => (prevScene === 0 ? 1 : 0)); // Toggle between scenes\n                setTimeElapsed(0);\n                if (videoRef.current) {\n                    videoRef.current.pause();\n                    videoRef.current.currentTime = 0; // Reset video time\n                    setIsPlaying(false);\n                }\n            }\n            drawScene(ctx);\n        }, 100);\n        \n        return () => clearInterval(interval);\n    }, [timeElapsed, currentScene, drawScene, scenes]); // 添加 scenes\n\n    const handleCanvasClick = () => {\n        if (isPlaying) {\n            setIsPlaying(false);\n            videoRef.current.pause();\n        } else {\n            setIsPlaying(true);\n            videoRef.current.play().catch(error => console.error('Error playing video:', error));\n        }\n    };\n\n    return (\n        <div>\n            <canvas\n                ref={canvasRef}\n                width={1280}\n                height={720}\n                onClick={handleCanvasClick}\n                style={{ cursor: 'pointer', backgroundColor: '#f0f0f0' }}\n            />\n            <video\n                ref={videoRef}\n                src={scenes[currentScene].media}\n                style={{ display: 'none' }} // Hide video element, we draw it on canvas\n                onEnded={() => {\n                    setCurrentScene(prev => (prev === 0 ? 1 : 0)); // Switch to next scene\n                    setIsPlaying(false);\n                }}\n                muted\n                controls // Optional\n            />\n        </div>\n    );\n};\n\nexport default ScenePlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}