{"ast":null,"code":"var _jsxFileName = \"/Users/eva/Documents/react/pantheonlab/my-app/src/ScenePlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScenePlayer = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [currentScene, setCurrentScene] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const scenes = [{\n    index: 0,\n    sentence: \"This is a simple Javascript test\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    media: \"/scene0.mp4\",\n    // 将场景 0 转换为视频\n    duration: 5 // Scene 0 duration\n  }, {\n    index: 1,\n    sentence: \"Here comes the video!\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    media: \"/VID.mp4\",\n    // 确保视频在公共文件夹中\n    duration: 3 // Scene 1 duration\n  }];\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    const interval = setInterval(() => {\n      setTimeElapsed(prevTime => prevTime + 0.1);\n      if (timeElapsed >= scenes[currentScene].duration) {\n        setCurrentScene(prevScene => prevScene === 0 ? 1 : 0); // Toggle between scenes\n        setTimeElapsed(0);\n        if (videoRef.current) {\n          videoRef.current.pause();\n          videoRef.current.currentTime = 0; // Reset video time\n          setIsPlaying(false);\n        }\n      }\n      drawScene(ctx);\n    }, 100);\n    return () => clearInterval(interval);\n  }, [timeElapsed, currentScene]);\n  const drawScene = ctx => {\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    const scene = scenes[currentScene];\n\n    // Draw the video frame for both scenes\n    if (videoRef.current && currentScene === 0) {\n      ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n    } else if (currentScene === 1) {\n      ctx.fillStyle = 'lightgray';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n    }\n\n    // Draw text if applicable\n    if (scene.index === 0 || scene.index === 1) {\n      drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n    }\n  };\n  const drawText = (ctx, text, x, y) => {\n    ctx.fillStyle = 'black';\n    ctx.font = '30px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(text, x, y);\n  };\n  const handleCanvasClick = () => {\n    if (isPlaying) {\n      setIsPlaying(false);\n      videoRef.current.pause();\n    } else {\n      setIsPlaying(true);\n      videoRef.current.play().catch(error => console.error('Error playing video:', error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1280,\n      height: 720,\n      onClick: handleCanvasClick,\n      style: {\n        cursor: 'pointer',\n        backgroundColor: '#f0f0f0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      src: scenes[currentScene].media,\n      style: {\n        display: 'none'\n      } // Hide video element, we draw it on canvas\n      ,\n      onEnded: () => {\n        setCurrentScene(prev => prev === 0 ? 1 : 0); // Switch to next scene\n        setIsPlaying(false);\n      },\n      muted: true,\n      controls: true // Optional\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(ScenePlayer, \"rdsU9qAulK4S/KkjC2CCl0HnLQA=\");\n_c = ScenePlayer;\nexport default ScenePlayer;\nvar _c;\n$RefreshReg$(_c, \"ScenePlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ScenePlayer","_s","canvasRef","videoRef","currentScene","setCurrentScene","timeElapsed","setTimeElapsed","isPlaying","setIsPlaying","scenes","index","sentence","textPosition","x","y","media","duration","ctx","current","getContext","interval","setInterval","prevTime","prevScene","pause","currentTime","drawScene","clearInterval","clearRect","width","height","scene","drawImage","fillStyle","fillRect","drawText","text","font","textAlign","fillText","handleCanvasClick","play","catch","error","console","children","ref","onClick","style","cursor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","src","display","onEnded","prev","muted","controls","_c","$RefreshReg$"],"sources":["/Users/eva/Documents/react/pantheonlab/my-app/src/ScenePlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst ScenePlayer = () => {\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const [currentScene, setCurrentScene] = useState(0);\n    const [timeElapsed, setTimeElapsed] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    const scenes = [\n        {\n            index: 0,\n            sentence: \"This is a simple Javascript test\",\n            textPosition: { x: 640, y: 360 }, // Center\n            media: \"/scene0.mp4\", // 将场景 0 转换为视频\n            duration: 5, // Scene 0 duration\n        },\n        {\n            index: 1,\n            sentence: \"Here comes the video!\",\n            textPosition: { x: 640, y: 360 }, // Center\n            media: \"/VID.mp4\", // 确保视频在公共文件夹中\n            duration: 3, // Scene 1 duration\n        },\n    ];\n\n    useEffect(() => {\n        const ctx = canvasRef.current.getContext('2d');\n        const interval = setInterval(() => {\n            setTimeElapsed(prevTime => prevTime + 0.1);\n            if (timeElapsed >= scenes[currentScene].duration) {\n                setCurrentScene(prevScene => (prevScene === 0 ? 1 : 0)); // Toggle between scenes\n                setTimeElapsed(0);\n                if (videoRef.current) {\n                    videoRef.current.pause();\n                    videoRef.current.currentTime = 0; // Reset video time\n                    setIsPlaying(false);\n                }\n            }\n            drawScene(ctx);\n        }, 100);\n        return () => clearInterval(interval);\n    }, [timeElapsed, currentScene]);\n\n    const drawScene = (ctx) => {\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        const scene = scenes[currentScene];\n\n        // Draw the video frame for both scenes\n        if (videoRef.current && currentScene === 0) {\n            ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        } else if (currentScene === 1) {\n            ctx.fillStyle = 'lightgray';\n            ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n            ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        }\n\n        // Draw text if applicable\n        if (scene.index === 0 || scene.index === 1) {\n            drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n        }\n    };\n\n    const drawText = (ctx, text, x, y) => {\n        ctx.fillStyle = 'black';\n        ctx.font = '30px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(text, x, y);\n    };\n\n    const handleCanvasClick = () => {\n        if (isPlaying) {\n            setIsPlaying(false);\n            videoRef.current.pause();\n        } else {\n            setIsPlaying(true);\n            videoRef.current.play().catch(error => console.error('Error playing video:', error));\n        }\n    };\n\n    return (\n        <div>\n            <canvas\n                ref={canvasRef}\n                width={1280}\n                height={720}\n                onClick={handleCanvasClick}\n                style={{ cursor: 'pointer', backgroundColor: '#f0f0f0' }}\n            />\n            <video\n                ref={videoRef}\n                src={scenes[currentScene].media}\n                style={{ display: 'none' }} // Hide video element, we draw it on canvas\n                onEnded={() => {\n                    setCurrentScene(prev => (prev === 0 ? 1 : 0)); // Switch to next scene\n                    setIsPlaying(false);\n                }}\n                muted\n                controls // Optional\n            />\n        </div>\n    );\n};\n\nexport default ScenePlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}