{"ast":null,"code":"var _jsxFileName = \"/Users/eva/Documents/pantheonlabQ1/my-app/src/ScenePlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScenePlayer = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [currentScene, setCurrentScene] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const scenes = [{\n    index: 0,\n    sentence: \"This is a simple Javascript test\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    textAnimation: \"none\",\n    media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\",\n    // Image URL\n    duration: 5 // Scene 0 duration\n  }, {\n    index: 1,\n    sentence: \"Here comes the video!\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    textAnimation: \"blink\",\n    media: \"/VID.mp4\",\n    // Ensure your video is in the public folder\n    duration: 3 // Scene 1 duration\n  }];\n  useEffect(() => {\n    videoRef.current = document.createElement('video');\n    videoRef.current.src = scenes[1].media; // 第一个场景的视频或图像\n    // 加载第一个视频\n    videoRef.current.load();\n  }, [scenes]);\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    const interval = setInterval(() => {\n      setTimeElapsed(prevTime => prevTime + 0.1);\n      if (timeElapsed >= scenes[currentScene].duration) {\n        setCurrentScene(prevScene => prevScene === 0 ? 1 : 0); // Toggle between scenes\n        setTimeElapsed(0);\n        if (videoRef.current) {\n          videoRef.current.pause();\n          videoRef.current.currentTime = 0; // Reset video time\n          setIsPlaying(false);\n        }\n      }\n      drawScene(ctx);\n    }, 100);\n    return () => clearInterval(interval);\n  }, [timeElapsed, currentScene]);\n  const drawScene = ctx => {\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    const scene = scenes[currentScene];\n\n    // Handle image for scene 0\n    if (scene.index === 0) {\n      const img = new Image();\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n      };\n      img.src = scene.media;\n    } else if (scene.index === 1) {\n      // Handle video for scene 1\n      ctx.fillStyle = 'lightgray';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // Draw the video frame\n      if (videoRef.current) {\n        ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n\n      // Draw the text on top of the video\n      drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n    }\n  };\n  const drawText = (ctx, text, x, y) => {\n    ctx.fillStyle = 'black';\n    ctx.font = '30px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(text, x, y);\n  };\n  const handleCanvasClick = () => {\n    if (currentScene === 1) {\n      if (isPlaying) {\n        setIsPlaying(false);\n        videoRef.current.pause();\n      } else {\n        setIsPlaying(true);\n        videoRef.current.play().catch(error => console.error('Error playing video:', error));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1280,\n      height: 720,\n      onClick: handleCanvasClick,\n      style: {\n        cursor: 'pointer',\n        backgroundColor: '#f0f0f0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), currentScene === 1 && /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      src: scenes[1].media,\n      style: {\n        display: 'none'\n      } // Hide video element, we draw it on canvas\n      ,\n      onEnded: () => {\n        setIsPlaying(false);\n        setCurrentScene(0); // Switch back to scene 0 after video ends\n      },\n      muted: true,\n      controls: true // Optional\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(ScenePlayer, \"cSOiNFoYlbTVY5s4Woub1DPZgxI=\");\n_c = ScenePlayer;\nexport default ScenePlayer;\nvar _c;\n$RefreshReg$(_c, \"ScenePlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ScenePlayer","_s","canvasRef","videoRef","currentScene","setCurrentScene","timeElapsed","setTimeElapsed","isPlaying","setIsPlaying","scenes","index","sentence","textPosition","x","y","textAnimation","media","duration","current","document","createElement","src","load","ctx","getContext","interval","setInterval","prevTime","prevScene","pause","currentTime","drawScene","clearInterval","clearRect","width","height","scene","img","Image","onload","drawImage","drawText","fillStyle","fillRect","text","font","textAlign","fillText","handleCanvasClick","play","catch","error","console","children","ref","onClick","style","cursor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","display","onEnded","muted","controls","_c","$RefreshReg$"],"sources":["/Users/eva/Documents/pantheonlabQ1/my-app/src/ScenePlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst ScenePlayer = () => {\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const [currentScene, setCurrentScene] = useState(0);\n    const [timeElapsed, setTimeElapsed] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    const scenes = [\n        {\n            index: 0,\n            sentence: \"This is a simple Javascript test\",\n            textPosition: { x: 640, y: 360 }, // Center\n            textAnimation: \"none\",\n            media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\", // Image URL\n            duration: 5, // Scene 0 duration\n        },\n        {\n            index: 1,\n            sentence: \"Here comes the video!\",\n            textPosition: { x: 640, y: 360 }, // Center\n            textAnimation: \"blink\",\n            media: \"/VID.mp4\", // Ensure your video is in the public folder\n            duration: 3, // Scene 1 duration\n        },\n    ];\n    useEffect(() => {\n        videoRef.current = document.createElement('video');\n        videoRef.current.src = scenes[1].media; // 第一个场景的视频或图像\n        // 加载第一个视频\n        videoRef.current.load();\n    }, [scenes]);\n    useEffect(() => {\n        const ctx = canvasRef.current.getContext('2d');\n        const interval = setInterval(() => {\n            setTimeElapsed(prevTime => prevTime + 0.1);\n            if (timeElapsed >= scenes[currentScene].duration) {\n                setCurrentScene(prevScene => (prevScene === 0 ? 1 : 0)); // Toggle between scenes\n                setTimeElapsed(0);\n                if (videoRef.current) {\n                    videoRef.current.pause();\n                    videoRef.current.currentTime = 0; // Reset video time\n                    setIsPlaying(false);\n                }\n            }\n            drawScene(ctx);\n        }, 100);\n        return () => clearInterval(interval);\n    }, [timeElapsed, currentScene]);\n\n    const drawScene = (ctx) => {\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        const scene = scenes[currentScene];\n\n        // Handle image for scene 0\n        if (scene.index === 0) {\n            const img = new Image();\n            img.onload = () => {\n                ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n                drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n            };\n            img.src = scene.media;\n        } else if (scene.index === 1) { // Handle video for scene 1\n            ctx.fillStyle = 'lightgray';\n            ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n            \n            // Draw the video frame\n            if (videoRef.current) {\n                ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n            }\n        \n            // Draw the text on top of the video\n            drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n        }\n    };\n\n    const drawText = (ctx, text, x, y) => {\n        ctx.fillStyle = 'black';\n        ctx.font = '30px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(text, x, y);\n    };\n\n    const handleCanvasClick = () => {\n        if (currentScene === 1) {\n            if (isPlaying) {\n                setIsPlaying(false);\n                videoRef.current.pause();\n            } else {\n                setIsPlaying(true);\n                videoRef.current.play().catch(error => console.error('Error playing video:', error));\n            }\n        }\n    };\n\n    return (\n        <div>\n            <canvas\n                ref={canvasRef}\n                width={1280}\n                height={720}\n                onClick={handleCanvasClick}\n                style={{ cursor: 'pointer', backgroundColor: '#f0f0f0' }}\n            />\n            {currentScene === 1 && (\n                <video\n                    ref={videoRef}\n                    src={scenes[1].media}\n                    style={{ display: 'none' }} // Hide video element, we draw it on canvas\n                    onEnded={() => {\n                        setIsPlaying(false);\n                        setCurrentScene(0); // Switch back to scene 0 after video ends\n                    }}\n                    muted\n                    controls // Optional\n                />\n            )}\n        </div>\n    );\n};\n\nexport default ScenePlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}