{"ast":null,"code":"var _jsxFileName = \"/Users/eva/Documents/pantheonlabQ1/my-app/src/ScenePlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScenePlayer = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [currentScene, setCurrentScene] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const scenes = [{\n    index: 0,\n    sentence: \"This is a simple Javascript test\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    textAnimation: \"none\",\n    media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\",\n    // Image URL\n    duration: 5 // Scene 0 duration\n  }, {\n    index: 1,\n    sentence: \"Here comes the video!\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    textAnimation: \"blink\",\n    media: \"/VID.mp4\",\n    // Ensure your video is in the public folder\n    duration: 3 // Scene 1 duration\n  }];\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    const interval = setInterval(() => {\n      setTimeElapsed(prevTime => prevTime + 0.1);\n      if (timeElapsed >= scenes[currentScene].duration) {\n        setCurrentScene(prevScene => prevScene === 0 ? 1 : 0); // Toggle between scenes\n        setTimeElapsed(0);\n        if (videoRef.current) {\n          videoRef.current.pause();\n          videoRef.current.currentTime = 0; // Reset video time\n          setIsPlaying(false);\n        }\n        drawScene(ctx); // 只在场景切换时调用 drawScene，而非每隔 100 毫秒调用一次\n        setIsPlaying(true);\n      }\n    }, 100);\n    return () => clearInterval(interval);\n  }, [timeElapsed, currentScene, isPlaying, scenes, drawScene]);\n  const drawScene = ctx => {\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    const scene = scenes[currentScene];\n\n    // Handle image for scene 0\n    if (scene.index === 0) {\n      const img = new Image();\n      img.src = scene.media;\n      if (img.complete) {\n        ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n      } else {\n        img.onload = () => {\n          ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n          drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n        };\n      }\n    } else if (scene.index === 1) {\n      // Handle video for scene 1\n      ctx.fillStyle = 'lightgray';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // 确保视频准备好了再绘制\n      if (videoRef.current && videoRef.current.readyState >= 2) {\n        ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n      } else {\n        videoRef.current.oncanplay = () => {\n          ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        };\n      }\n\n      // 绘制文本\n      drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n    }\n  };\n  const drawText = (ctx, text, x, y) => {\n    // if (currentScene === 0) {\n    ctx.fillStyle = 'black';\n    ctx.font = '30px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(text, x, y);\n    // }\n  };\n  const handleCanvasClick = () => {\n    //if (currentScene === 1) {\n    if (isPlaying) {\n      setIsPlaying(false);\n      videoRef.current.pause();\n    } else {\n      setIsPlaying(true);\n      videoRef.current.play().catch(error => console.error('Error playing video:', error));\n    }\n    //}\n  };\n  const handleCanvasDoubleClick = () => {\n    if (currentScene === 1) {\n      setIsPlaying(false);\n      videoRef.current.currentTime = 0;\n      videoRef.current.pause();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      src: scenes[currentScene].media,\n      style: {\n        display: 'none'\n      } // Hide video element, we draw it on canvas\n      ,\n      autoPlay: true,\n      onCanPlay: () => {\n        console.log('Video is ready to play');\n      },\n      onEnded: () => {\n        setIsPlaying(false);\n        setCurrentScene(0); // Switch back to scene 0 after video ends\n      },\n      muted: true,\n      controls: true // Optional\n      ,\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1280,\n      height: 720,\n      onClick: handleCanvasClick,\n      onDoubleClick: handleCanvasDoubleClick,\n      style: {\n        cursor: 'pointer',\n        backgroundColor: '#f0f0f0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), currentScene === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'absolute',\n          top: scenes[1].textPosition.y,\n          left: scenes[1].textPosition.x,\n          fontSize: '30px',\n          fontFamily: 'Arial',\n          textAlign: 'center',\n          animation: 'blink 1s infinite'\n        },\n        children: scenes[1].sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(ScenePlayer, \"rdsU9qAulK4S/KkjC2CCl0HnLQA=\");\n_c = ScenePlayer;\nexport default ScenePlayer;\nvar _c;\n$RefreshReg$(_c, \"ScenePlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ScenePlayer","_s","canvasRef","videoRef","currentScene","setCurrentScene","timeElapsed","setTimeElapsed","isPlaying","setIsPlaying","scenes","index","sentence","textPosition","x","y","textAnimation","media","duration","ctx","current","getContext","interval","setInterval","prevTime","prevScene","pause","currentTime","drawScene","clearInterval","clearRect","width","height","scene","img","Image","src","complete","drawImage","drawText","onload","fillStyle","fillRect","readyState","oncanplay","text","font","textAlign","fillText","handleCanvasClick","play","catch","error","console","handleCanvasDoubleClick","children","style","display","autoPlay","onCanPlay","log","onEnded","muted","controls","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDoubleClick","cursor","backgroundColor","position","top","left","fontSize","fontFamily","animation","_c","$RefreshReg$"],"sources":["/Users/eva/Documents/pantheonlabQ1/my-app/src/ScenePlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst ScenePlayer = () => {\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const [currentScene, setCurrentScene] = useState(0);\n    const [timeElapsed, setTimeElapsed] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    const scenes = [\n        {\n            index: 0,\n            sentence: \"This is a simple Javascript test\",\n            textPosition: { x: 640, y: 360 }, // Center\n            textAnimation: \"none\",\n            media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\", // Image URL\n            duration: 5, // Scene 0 duration\n        },\n        {\n            index: 1,\n            sentence: \"Here comes the video!\",\n            textPosition: { x: 640, y: 360 }, // Center\n            textAnimation: \"blink\",\n            media: \"/VID.mp4\", // Ensure your video is in the public folder\n            duration: 3, // Scene 1 duration\n        },\n    ];\n\n    useEffect(() => {\n        const ctx = canvasRef.current.getContext('2d');\n        const interval = setInterval(() => {\n            setTimeElapsed(prevTime => prevTime + 0.1);\n            if (timeElapsed >= scenes[currentScene].duration) {\n                setCurrentScene(prevScene => (prevScene === 0 ? 1 : 0)); // Toggle between scenes\n                setTimeElapsed(0);\n                if (videoRef.current) {\n                    videoRef.current.pause();\n                    videoRef.current.currentTime = 0; // Reset video time\n                    setIsPlaying(false);\n                }\n                drawScene(ctx); // 只在场景切换时调用 drawScene，而非每隔 100 毫秒调用一次\n                setIsPlaying(true);\n            }\n            \n        }, 100);\n        return () => clearInterval(interval);\n    }, [timeElapsed, currentScene,isPlaying,scenes,drawScene]);\n\n    const drawScene = (ctx) => {\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        const scene = scenes[currentScene];\n    \n        // Handle image for scene 0\n        if (scene.index === 0) {\n            const img = new Image();\n            img.src = scene.media;\n            if (img.complete) {\n                ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n                drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n            } else {\n                img.onload = () => {\n                    ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n                    drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n                };\n            }\n        } else if (scene.index === 1) { // Handle video for scene 1\n            ctx.fillStyle = 'lightgray';\n            ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    \n            // 确保视频准备好了再绘制\n            if (videoRef.current && videoRef.current.readyState >= 2) {\n                ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n            } else {\n                videoRef.current.oncanplay = () => {\n                    ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n                };\n            }\n    \n            // 绘制文本\n            drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n        }\n    };\n\n    const drawText = (ctx, text, x, y) => {\n       // if (currentScene === 0) {\n            ctx.fillStyle = 'black';\n            ctx.font = '30px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText(text, x, y);\n       // }\n    };\n\n    const handleCanvasClick = () => {\n        //if (currentScene === 1) {\n            if (isPlaying) {\n                setIsPlaying(false);\n                videoRef.current.pause();\n            } else {\n                setIsPlaying(true);\n                videoRef.current.play().catch(error => console.error('Error playing video:', error));\n                \n            }\n        //}\n    };\n\n    const handleCanvasDoubleClick = () => {\n        if (currentScene === 1) {\n            setIsPlaying(false);\n            videoRef.current.currentTime = 0;\n            videoRef.current.pause();\n        }\n    };\n\n    return (\n        <div>\n            <video\n                src={scenes[currentScene].media}\n                style={{ display: 'none' }} // Hide video element, we draw it on canvas\n                autoPlay\n                onCanPlay={() => {\n                    console.log('Video is ready to play');\n                }}\n                onEnded={() => {\n                    setIsPlaying(false);\n                    setCurrentScene(0); // Switch back to scene 0 after video ends\n                }}\n                muted\n                controls // Optional\n                ref={videoRef}\n            />\n            <canvas\n                ref={canvasRef}\n                width={1280}\n                height={720}\n                onClick={handleCanvasClick}\n                onDoubleClick={handleCanvasDoubleClick}\n                style={{ cursor: 'pointer', backgroundColor: '#f0f0f0' }}\n            />\n            {currentScene === 1  && (\n                <div>\n                    <span\n                        style={{\n                            position: 'absolute',\n                            top: scenes[1].textPosition.y,\n                            left: scenes[1].textPosition.x,\n                            fontSize: '30px',\n                            fontFamily: 'Arial',\n                            textAlign: 'center',\n                            animation: 'blink 1s infinite',\n                        }}\n                    >\n                        {scenes[1].sentence}\n                    </span>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ScenePlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}