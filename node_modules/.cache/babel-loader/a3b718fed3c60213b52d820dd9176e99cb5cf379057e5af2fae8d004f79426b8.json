{"ast":null,"code":"var _jsxFileName = \"/Users/eva/Documents/pantheonlabQ1/my-app/src/ScenePlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScenePlayer = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [currentScene, setCurrentScene] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const scenes = [{\n    index: 0,\n    sentence: \"This is a simple Javascript test\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    textAnimation: \"none\",\n    media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\",\n    // Image URL\n    duration: 5 // Scene 0 duration\n  }, {\n    index: 1,\n    sentence: \"Here comes the video!\",\n    textPosition: {\n      x: 640,\n      y: 360\n    },\n    // Center\n    textAnimation: \"blink\",\n    media: \"/VID.mp4\",\n    // Ensure your video is in the public folder\n    duration: 3 // Scene 1 duration\n  }];\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    const interval = setInterval(() => {\n      setTimeElapsed(prevTime => prevTime + 0.1);\n      if (timeElapsed >= scenes[currentScene].duration) {\n        setCurrentScene(prevScene => prevScene === 0 ? 1 : 0); // Toggle between scenes\n        setTimeElapsed(0);\n        if (videoRef.current) {\n          videoRef.current.pause();\n          videoRef.current.currentTime = 0; // Reset video time\n          setIsPlaying(false);\n        }\n      }\n      drawScene(ctx);\n    }, 100);\n    return () => clearInterval(interval);\n  }, [timeElapsed, currentScene]);\n  const drawScene = ctx => {\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    const scene = scenes[currentScene];\n\n    // Handle image for scene 0\n    if (scene.index === 0) {\n      const img = new Image();\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n      };\n      img.src = scene.media;\n    } else if (scene.index === 1) {\n      // Handle video for scene 1\n      ctx.fillStyle = 'lightgray';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // 确保视频准备好了再绘制\n      if (videoRef.current && videoRef.current.readyState >= 2) {\n        ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n      } else {\n        console.log(\"Video not ready yet\");\n      }\n\n      // 绘制文本\n      drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n    }\n  };\n  const drawText = (ctx, text, x, y) => {\n    if (currentScene === 0) {\n      ctx.fillStyle = 'black';\n      ctx.font = '30px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(text, x, y);\n    }\n  };\n  const handleCanvasClick = () => {\n    if (currentScene === 1) {\n      if (isPlaying) {\n        setIsPlaying(false);\n        videoRef.current.pause();\n      } else {\n        setIsPlaying(true);\n        videoRef.current.play().catch(error => console.error('Error playing video:', error));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1280,\n      height: 720\n      //onClick={handleCanvasClick}\n      ,\n      style: {\n        cursor: 'pointer',\n        backgroundColor: '#f0f0f0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), currentScene === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        src: scenes[1].media,\n        style: {\n          display: 'none'\n        } // Hide video element, we draw it on canvas\n        ,\n        onCanPlay: () => {\n          console.log('Video is ready to play');\n        }\n        //onEnded={() => {\n        //    setIsPlaying(false);\n        //    setCurrentScene(0); // Switch back to scene 0 after video ends\n        //}}\n        ,\n        muted: true,\n        controls: true // Optional\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'absolute',\n          top: scenes[1].textPosition.y,\n          left: scenes[1].textPosition.x,\n          fontSize: '30px',\n          fontFamily: 'Arial',\n          textAlign: 'center',\n          animation: 'blink 1s infinite'\n        },\n        children: scenes[1].sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 10,\n        left: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlay,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePause,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStop,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(ScenePlayer, \"rdsU9qAulK4S/KkjC2CCl0HnLQA=\");\n_c = ScenePlayer;\nexport default ScenePlayer;\nvar _c;\n$RefreshReg$(_c, \"ScenePlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ScenePlayer","_s","canvasRef","videoRef","currentScene","setCurrentScene","timeElapsed","setTimeElapsed","isPlaying","setIsPlaying","scenes","index","sentence","textPosition","x","y","textAnimation","media","duration","ctx","current","getContext","interval","setInterval","prevTime","prevScene","pause","currentTime","drawScene","clearInterval","clearRect","width","height","scene","img","Image","onload","drawImage","drawText","src","fillStyle","fillRect","readyState","console","log","text","font","textAlign","fillText","handleCanvasClick","play","catch","error","children","ref","style","cursor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","display","onCanPlay","muted","controls","position","top","left","fontSize","fontFamily","animation","onClick","handlePlay","handlePause","handleStop","_c","$RefreshReg$"],"sources":["/Users/eva/Documents/pantheonlabQ1/my-app/src/ScenePlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst ScenePlayer = () => {\n    const canvasRef = useRef(null);\n    const videoRef = useRef(null);\n    const [currentScene, setCurrentScene] = useState(0);\n    const [timeElapsed, setTimeElapsed] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    const scenes = [\n        {\n            index: 0,\n            sentence: \"This is a simple Javascript test\",\n            textPosition: { x: 640, y: 360 }, // Center\n            textAnimation: \"none\",\n            media: \"https://miro.medium.com/max/1024/1*OK8xc3Ic6EGYg2k6BeGabg.jpeg\", // Image URL\n            duration: 5, // Scene 0 duration\n        },\n        {\n            index: 1,\n            sentence: \"Here comes the video!\",\n            textPosition: { x: 640, y: 360 }, // Center\n            textAnimation: \"blink\",\n            media: \"/VID.mp4\", // Ensure your video is in the public folder\n            duration: 3, // Scene 1 duration\n        },\n    ];\n    \n    useEffect(() => {\n        const ctx = canvasRef.current.getContext('2d');\n        const interval = setInterval(() => {\n            setTimeElapsed(prevTime => prevTime + 0.1);\n            if (timeElapsed >= scenes[currentScene].duration) {\n                setCurrentScene(prevScene => (prevScene === 0 ? 1 : 0)); // Toggle between scenes\n                setTimeElapsed(0);\n                if (videoRef.current) {\n                    videoRef.current.pause();\n                    videoRef.current.currentTime = 0; // Reset video time\n                    setIsPlaying(false);\n                }\n            }\n            drawScene(ctx);\n        }, 100);\n        return () => clearInterval(interval);\n    }, [timeElapsed, currentScene]);\n\n    const drawScene = (ctx) => {\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        const scene = scenes[currentScene];\n\n        // Handle image for scene 0\n        if (scene.index === 0) {\n            const img = new Image();\n            img.onload = () => {\n                ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n                drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n            };\n            img.src = scene.media;\n        } else if (scene.index === 1) { // Handle video for scene 1\n            ctx.fillStyle = 'lightgray';\n            ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n            \n            // 确保视频准备好了再绘制\n            if (videoRef.current && videoRef.current.readyState >= 2) {\n                ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n            } else {\n                console.log(\"Video not ready yet\");\n            }\n\n            // 绘制文本\n            drawText(ctx, scene.sentence, scene.textPosition.x, scene.textPosition.y);\n        }\n    };\n\n    const drawText = (ctx, text, x, y) => {\n        if (currentScene === 0) {\n            ctx.fillStyle = 'black';\n            ctx.font = '30px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText(text, x, y);}\n    };\n\n    const handleCanvasClick = () => {\n        if (currentScene === 1) {\n            if (isPlaying) {\n                setIsPlaying(false);\n                videoRef.current.pause();\n            } else {\n                setIsPlaying(true);\n                videoRef.current.play().catch(error => console.error('Error playing video:', error));\n            }\n        }\n    };\n\n    return (\n        <div>\n            <canvas\n                ref={canvasRef}\n                width={1280}\n                height={720}\n                //onClick={handleCanvasClick}\n                style={{ cursor: 'pointer', backgroundColor: '#f0f0f0' }}\n            />\n            {currentScene === 1 && (\n                <div>\n                    <video\n                    ref={videoRef}\n                    src={scenes[1].media}\n                    style={{ display: 'none' }} // Hide video element, we draw it on canvas\n                    onCanPlay={() => {\n                        console.log('Video is ready to play');\n                    }}\n                    //onEnded={() => {\n                    //    setIsPlaying(false);\n                    //    setCurrentScene(0); // Switch back to scene 0 after video ends\n                    //}}\n                    muted\n                    controls // Optional\n                    />\n                    <span\n                    style={{\n                        position: 'absolute',\n                        top: scenes[1].textPosition.y,\n                        left: scenes[1].textPosition.x,\n                        fontSize: '30px',\n                        fontFamily: 'Arial',\n                        textAlign: 'center',\n                        animation: 'blink 1s infinite',\n                    }}\n                    >\n                    {scenes[1].sentence}\n                    </span>\n                </div>\n            )}\n            <div style={{ position: 'absolute', top: 10, left: 10 }}>\n            <button onClick={handlePlay}>Play</button>\n            <button onClick={handlePause}>Pause</button>\n            <button onClick={handleStop}>Stop</button>\n    </div>\n        </div>\n    );\n};\n\nexport default ScenePlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMO,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,MAAM,GAAG,CACX;IACIC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,kCAAkC;IAC5CC,YAAY,EAAE;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAI,CAAC;IAAE;IAClCC,aAAa,EAAE,MAAM;IACrBC,KAAK,EAAE,gEAAgE;IAAE;IACzEC,QAAQ,EAAE,CAAC,CAAE;EACjB,CAAC,EACD;IACIP,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,uBAAuB;IACjCC,YAAY,EAAE;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAI,CAAC;IAAE;IAClCC,aAAa,EAAE,OAAO;IACtBC,KAAK,EAAE,UAAU;IAAE;IACnBC,QAAQ,EAAE,CAAC,CAAE;EACjB,CAAC,CACJ;EAEDvB,SAAS,CAAC,MAAM;IACZ,MAAMwB,GAAG,GAAGjB,SAAS,CAACkB,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAC9C,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BhB,cAAc,CAACiB,QAAQ,IAAIA,QAAQ,GAAG,GAAG,CAAC;MAC1C,IAAIlB,WAAW,IAAII,MAAM,CAACN,YAAY,CAAC,CAACc,QAAQ,EAAE;QAC9Cb,eAAe,CAACoB,SAAS,IAAKA,SAAS,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC;QACzDlB,cAAc,CAAC,CAAC,CAAC;QACjB,IAAIJ,QAAQ,CAACiB,OAAO,EAAE;UAClBjB,QAAQ,CAACiB,OAAO,CAACM,KAAK,CAAC,CAAC;UACxBvB,QAAQ,CAACiB,OAAO,CAACO,WAAW,GAAG,CAAC,CAAC,CAAC;UAClClB,YAAY,CAAC,KAAK,CAAC;QACvB;MACJ;MACAmB,SAAS,CAACT,GAAG,CAAC;IAClB,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMU,aAAa,CAACP,QAAQ,CAAC;EACxC,CAAC,EAAE,CAAChB,WAAW,EAAEF,YAAY,CAAC,CAAC;EAE/B,MAAMwB,SAAS,GAAIT,GAAG,IAAK;IACvBA,GAAG,CAACW,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE5B,SAAS,CAACkB,OAAO,CAACW,KAAK,EAAE7B,SAAS,CAACkB,OAAO,CAACY,MAAM,CAAC;IACtE,MAAMC,KAAK,GAAGvB,MAAM,CAACN,YAAY,CAAC;;IAElC;IACA,IAAI6B,KAAK,CAACtB,KAAK,KAAK,CAAC,EAAE;MACnB,MAAMuB,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,MAAM,GAAG,MAAM;QACfjB,GAAG,CAACkB,SAAS,CAACH,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEhC,SAAS,CAACkB,OAAO,CAACW,KAAK,EAAE7B,SAAS,CAACkB,OAAO,CAACY,MAAM,CAAC;QAC3EM,QAAQ,CAACnB,GAAG,EAAEc,KAAK,CAACrB,QAAQ,EAAEqB,KAAK,CAACpB,YAAY,CAACC,CAAC,EAAEmB,KAAK,CAACpB,YAAY,CAACE,CAAC,CAAC;MAC7E,CAAC;MACDmB,GAAG,CAACK,GAAG,GAAGN,KAAK,CAAChB,KAAK;IACzB,CAAC,MAAM,IAAIgB,KAAK,CAACtB,KAAK,KAAK,CAAC,EAAE;MAAE;MAC5BQ,GAAG,CAACqB,SAAS,GAAG,WAAW;MAC3BrB,GAAG,CAACsB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEvC,SAAS,CAACkB,OAAO,CAACW,KAAK,EAAE7B,SAAS,CAACkB,OAAO,CAACY,MAAM,CAAC;;MAErE;MACA,IAAI7B,QAAQ,CAACiB,OAAO,IAAIjB,QAAQ,CAACiB,OAAO,CAACsB,UAAU,IAAI,CAAC,EAAE;QACtDvB,GAAG,CAACkB,SAAS,CAAClC,QAAQ,CAACiB,OAAO,EAAE,CAAC,EAAE,CAAC,EAAElB,SAAS,CAACkB,OAAO,CAACW,KAAK,EAAE7B,SAAS,CAACkB,OAAO,CAACY,MAAM,CAAC;MAC5F,CAAC,MAAM;QACHW,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACtC;;MAEA;MACAN,QAAQ,CAACnB,GAAG,EAAEc,KAAK,CAACrB,QAAQ,EAAEqB,KAAK,CAACpB,YAAY,CAACC,CAAC,EAAEmB,KAAK,CAACpB,YAAY,CAACE,CAAC,CAAC;IAC7E;EACJ,CAAC;EAED,MAAMuB,QAAQ,GAAGA,CAACnB,GAAG,EAAE0B,IAAI,EAAE/B,CAAC,EAAEC,CAAC,KAAK;IAClC,IAAIX,YAAY,KAAK,CAAC,EAAE;MACpBe,GAAG,CAACqB,SAAS,GAAG,OAAO;MACvBrB,GAAG,CAAC2B,IAAI,GAAG,YAAY;MACvB3B,GAAG,CAAC4B,SAAS,GAAG,QAAQ;MACxB5B,GAAG,CAAC6B,QAAQ,CAACH,IAAI,EAAE/B,CAAC,EAAEC,CAAC,CAAC;IAAC;EACjC,CAAC;EAED,MAAMkC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAI7C,YAAY,KAAK,CAAC,EAAE;MACpB,IAAII,SAAS,EAAE;QACXC,YAAY,CAAC,KAAK,CAAC;QACnBN,QAAQ,CAACiB,OAAO,CAACM,KAAK,CAAC,CAAC;MAC5B,CAAC,MAAM;QACHjB,YAAY,CAAC,IAAI,CAAC;QAClBN,QAAQ,CAACiB,OAAO,CAAC8B,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAIT,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;MACxF;IACJ;EACJ,CAAC;EAED,oBACIrD,OAAA;IAAAsD,QAAA,gBACItD,OAAA;MACIuD,GAAG,EAAEpD,SAAU;MACf6B,KAAK,EAAE,IAAK;MACZC,MAAM,EAAE;MACR;MAAA;MACAuB,KAAK,EAAE;QAAEC,MAAM,EAAE,SAAS;QAAEC,eAAe,EAAE;MAAU;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,EACDzD,YAAY,KAAK,CAAC,iBACfL,OAAA;MAAAsD,QAAA,gBACItD,OAAA;QACAuD,GAAG,EAAEnD,QAAS;QACdoC,GAAG,EAAE7B,MAAM,CAAC,CAAC,CAAC,CAACO,KAAM;QACrBsC,KAAK,EAAE;UAAEO,OAAO,EAAE;QAAO,CAAE,CAAC;QAAA;QAC5BC,SAAS,EAAEA,CAAA,KAAM;UACbpB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACzC;QACA;QACA;QACA;QACA;QAAA;QACAoB,KAAK;QACLC,QAAQ,OAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACF9D,OAAA;QACAwD,KAAK,EAAE;UACHW,QAAQ,EAAE,UAAU;UACpBC,GAAG,EAAEzD,MAAM,CAAC,CAAC,CAAC,CAACG,YAAY,CAACE,CAAC;UAC7BqD,IAAI,EAAE1D,MAAM,CAAC,CAAC,CAAC,CAACG,YAAY,CAACC,CAAC;UAC9BuD,QAAQ,EAAE,MAAM;UAChBC,UAAU,EAAE,OAAO;UACnBvB,SAAS,EAAE,QAAQ;UACnBwB,SAAS,EAAE;QACf,CAAE;QAAAlB,QAAA,EAED3C,MAAM,CAAC,CAAC,CAAC,CAACE;MAAQ;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACR,eACD9D,OAAA;MAAKwD,KAAK,EAAE;QAAEW,QAAQ,EAAE,UAAU;QAAEC,GAAG,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAE;MAAAf,QAAA,gBACxDtD,OAAA;QAAQyE,OAAO,EAAEC,UAAW;QAAApB,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1C9D,OAAA;QAAQyE,OAAO,EAAEE,WAAY;QAAArB,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5C9D,OAAA;QAAQyE,OAAO,EAAEG,UAAW;QAAAtB,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEd,CAAC;AAAC5D,EAAA,CA3IID,WAAW;AAAA4E,EAAA,GAAX5E,WAAW;AA6IjB,eAAeA,WAAW;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}